<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Couture&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-25T00:40:32.325Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Couture</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac 设置开机自动（关闭）启动MySQL</title>
    <link href="http://example.com/2023/04/25/Mac-%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%EF%BC%88%E5%85%B3%E9%97%AD%EF%BC%89%E5%90%AF%E5%8A%A8MySQL/"/>
    <id>http://example.com/2023/04/25/Mac-%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%EF%BC%88%E5%85%B3%E9%97%AD%EF%BC%89%E5%90%AF%E5%8A%A8MySQL/</id>
    <published>2023-04-25T00:38:33.000Z</published>
    <updated>2023-04-25T00:40:32.325Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注意：本次设备是MacBookPro M1Pro版本</p></blockquote><p>打开终端应用</p><p>如果过启动关闭MySQL，输入以下命令：</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl <span class="built_in">disable</span> system/com.oracle.oss.mysql.mysqld</span><br></pre></td></tr></table></figure><p>系统会提示输入管理员密码，输入密码后按下回车键。</p><p>执行命令后，MySQL将会停止运行，你可以在终端中确认MySQL已被成功关闭。</p><p>如果想要启动自动开机MySQL，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl <span class="built_in">enable</span> system/com.oracle.oss.mysql.mysqld</span><br></pre></td></tr></table></figure><p>这样可以启动MySQL并开始运行。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注意：本次设备是MacBookPro M1Pro版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开终端应用&lt;/p&gt;
&lt;p&gt;如果过启动关闭MySQL，输入以下命令：&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
    <category term="MySQL - Mac" scheme="http://example.com/tags/MySQL-Mac/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu SSH连接MySQL报错</title>
    <link href="http://example.com/2023/04/17/Ubuntu-SSH%E8%BF%9E%E6%8E%A5MySQL%E6%8A%A5%E9%94%99/"/>
    <id>http://example.com/2023/04/17/Ubuntu-SSH%E8%BF%9E%E6%8E%A5MySQL%E6%8A%A5%E9%94%99/</id>
    <published>2023-04-17T07:40:58.000Z</published>
    <updated>2023-04-17T07:42:45.278Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错内容："><a href="#报错内容：" class="headerlink" title="报错内容："></a>报错内容：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[28000][1698] Access denied <span class="keyword">for</span> user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;10.211.55.22&#x27;</span></span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/b1ec3ad37670b94ee13ae571d0dc9f7f.png" alt="v"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/e92246d9f5d9f15c20b70b597ccb6d2c.png" alt="e92246d9f5d9f15c20b70b597ccb6d2c"></p><h3 id="导致问题出现的原因："><a href="#导致问题出现的原因：" class="headerlink" title="导致问题出现的原因："></a>导致问题出现的原因：</h3><p>​在 MySQL 5.7.6 及以上版本中，为了提高安全性，MySQL 将默认禁止 <code>root</code> 用户从远程主机登录。因此，如果你在安装 MySQL 时选择了默认配置，则在远程主机上使用 <code>root</code> 用户名和密码连接到 MySQL 服务器时将会失败。</p><h3 id="解决方式："><a href="#解决方式：" class="headerlink" title="解决方式："></a>解决方式：</h3><p>​首先你得防火墙规则要放通端口<code>3306</code>,如果是虚拟机内网的情况，也可以直接给防火墙关掉。</p><p>​然后可以直接新添加一个用户，用来管理MySQL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#x27;username&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;password&#x27;; # username 你的用户名  password 你要设置的密码</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES; # 刷新</span><br></pre></td></tr></table></figure><p>这时候再次连接就能连接成功了~</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230417123523144.png" alt="image-20230417123523144"></p><p> </p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;报错内容：&quot;&gt;&lt;a href=&quot;#报错内容：&quot; class=&quot;headerlink&quot; title=&quot;报错内容：&quot;&gt;&lt;/a&gt;报错内容：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[28000][1698] Access denied &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; user &lt;span class=&quot;string&quot;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&amp;#x27;10.211.55.22&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="运维" scheme="http://example.com/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Ubuntu" scheme="http://example.com/categories/Linux/%E8%BF%90%E7%BB%B4/Ubuntu/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Mac（M1Pro安装Redis）</title>
    <link href="http://example.com/2023/04/13/Mac%EF%BC%88M1Pro%E5%AE%89%E8%A3%85Redis%EF%BC%89/"/>
    <id>http://example.com/2023/04/13/Mac%EF%BC%88M1Pro%E5%AE%89%E8%A3%85Redis%EF%BC%89/</id>
    <published>2023-04-13T05:53:29.000Z</published>
    <updated>2023-04-13T05:57:40.285Z</updated>
    
    <content type="html"><![CDATA[<p>采用<code>homebrew</code>安装Redis，前提是Mac已经安装Redis</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">~ brew install redis <span class="comment"># 执行这个命令来安装Redis</span></span><br><span class="line">Running `brew update --auto-update`...</span><br><span class="line">==&gt; Downloading https://formulae.brew.sh/api/formula.jws.json</span><br><span class="line"></span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Fetching redis</span><br><span class="line">==&gt; Downloading https://mirrors.aliyun.com/homebrew/homebrew-bottles/redis-7.0.1</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring redis-7.0.10.arm64_monterey.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To start redis now and restart at login:</span><br><span class="line">  brew services start redis</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /opt/homebrew/Cellar/redis/7.0.10: 14 files, 2.7MB</span><br><span class="line">==&gt; Running `brew cleanup redis`...</span><br><span class="line">Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.</span><br><span class="line">Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).</span><br><span class="line">➜  ~ brew services start redis</span><br><span class="line">==&gt; Downloading https://formulae.brew.sh/api/formula.jws.json</span><br><span class="line"><span class="comment">##O=#  #</span></span><br><span class="line">Warning: Calling formula.plist_path is deprecated! Use formula.launchd_service_path instead.</span><br><span class="line">Please report this issue to the homebrew/services tap (not Homebrew/brew or Homebrew/homebrew-core), or even better, submit a PR to fix it:</span><br><span class="line">  /opt/homebrew/Library/Taps/homebrew/homebrew-services/lib/service/formula_wrapper.rb:58</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ redis-cli <span class="comment"># 启动redis</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name couture</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line"><span class="string">&quot;couture&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; shutdown <span class="comment"># 关闭</span></span><br><span class="line">not connected&gt; quit  <span class="comment"># 退出</span></span><br></pre></td></tr></table></figure><p>在<code>homebrew</code>安装的时候也出现一个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning: Calling formula.plist_path is deprecated! Use formula.launchd_service_path instead.</span><br><span class="line">Please report this issue to the homebrew/services tap (not Homebrew/brew or Homebrew/homebrew-core), or even better, submit a PR to fix it:</span><br><span class="line">  /opt/homebrew/Library/Taps/homebrew/homebrew-services/lib/service/formula_wrapper.rb:58</span><br></pre></td></tr></table></figure><p>需要修复什么东西</p><p>然后只需要执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="built_in">unset</span> HOMEBREW_BOTTLE_DOMAIN</span><br></pre></td></tr></table></figure><p>问题解决~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;采用&lt;code&gt;homebrew&lt;/code&gt;安装Redis，前提是Mac已经安装Redis&lt;/p&gt;</summary>
    
    
    
    <category term="redis" scheme="http://example.com/categories/redis/"/>
    
    <category term="Mac" scheme="http://example.com/categories/redis/Mac/"/>
    
    <category term="Homebrew" scheme="http://example.com/categories/redis/Mac/Homebrew/"/>
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
    <category term="Homebrew" scheme="http://example.com/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 8 字符集报错解决方法</title>
    <link href="http://example.com/2023/04/08/CentOS-8-%E5%AD%97%E7%AC%A6%E9%9B%86%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2023/04/08/CentOS-8-%E5%AD%97%E7%AC%A6%E9%9B%86%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2023-04-08T06:36:45.000Z</published>
    <updated>2023-04-08T06:38:51.055Z</updated>
    
    <content type="html"><![CDATA[<h5 id="首先是错误如下："><a href="#首先是错误如下：" class="headerlink" title="首先是错误如下："></a>首先是错误如下：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-3-centos ~]<span class="comment"># yum install -y yum-utils</span></span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8     <span class="comment"># 这里是出现了 UTF-8字符集的问题</span></span><br><span class="line">Last metadata expiration check: 0:02:34 ago on Fri Apr  7 17:29:02 2023.</span><br></pre></td></tr></table></figure><span id="more"></span><h5 id="解决方式："><a href="#解决方式：" class="headerlink" title="解决方式："></a>解决方式：</h5><p>执行一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export LC_ALL=en_US.UTF-8&quot;</span>  &gt;&gt;  /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export LC_CTYPE=en_US.UTF-8&quot;</span>  &gt;&gt;  /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>在安装软件，不会有报错提示，问题得到了解决~</p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;首先是错误如下：&quot;&gt;&lt;a href=&quot;#首先是错误如下：&quot; class=&quot;headerlink&quot; title=&quot;首先是错误如下：&quot;&gt;&lt;/a&gt;首先是错误如下：&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@VM-4-3-centos ~]&lt;span class=&quot;comment&quot;&gt;# yum install -y yum-utils&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Failed to &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; locale, defaulting to C.UTF-8     &lt;span class=&quot;comment&quot;&gt;# 这里是出现了 UTF-8字符集的问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Last metadata expiration check: 0:02:34 ago on Fri Apr  7 17:29:02 2023.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="CentOS 8" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/CentOS-8/"/>
    
    <category term="Linux" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/CentOS-8/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="CentOS 8" scheme="http://example.com/tags/CentOS-8/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 8 安装Docker</title>
    <link href="http://example.com/2023/04/08/CentOS-8-%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://example.com/2023/04/08/CentOS-8-%E5%AE%89%E8%A3%85Docker/</id>
    <published>2023-04-08T01:56:14.000Z</published>
    <updated>2023-04-08T02:08:55.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-3-centos ~]<span class="comment"># yum remove docker</span></span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8</span><br><span class="line">No match <span class="keyword">for</span> argument: docker</span><br><span class="line">No packages marked <span class="keyword">for</span> removal.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">Nothing to <span class="keyword">do</span>.</span><br><span class="line">Complete!</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># yum remove docker *</span></span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8</span><br><span class="line">No match <span class="keyword">for</span> argument: docker</span><br><span class="line">Error:</span><br><span class="line">Problem: The operation would result <span class="keyword">in</span> removing the following protected packages: dnf, kernel-core, setup, sudo, systemd, systemd-udev, yum</span><br><span class="line">(try to add <span class="string">&#x27;--skip-broken&#x27;</span> to skip uninstallable packages or <span class="string">&#x27;--nobest&#x27;</span> to use not only best candidate packages)</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># yum install -y yum-utils</span></span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8</span><br><span class="line">Last metadata expiration check: 0:02:34 ago on Fri Apr  7 17:29:02 2023.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================================</span><br><span class="line">Package                          Architecture   Version                Repository         Size</span><br><span class="line">================================================================================================</span><br><span class="line">Installing:</span><br><span class="line">yum-utils                        noarch         4.0.21-18.el8          baseos             75 k</span><br><span class="line">Upgrading:</span><br><span class="line">dnf                              noarch         4.7.0-15.el8           baseos            542 k</span><br><span class="line">dnf-data                         noarch         4.7.0-15.el8           baseos            156 k</span><br><span class="line">dnf-plugins-core                 noarch         4.0.21-18.el8          baseos             75 k</span><br><span class="line">libdnf                           x86_64         0.63.0-13.el8          baseos            704 k</span><br><span class="line">libsolv                          x86_64         0.7.20-4.el8           baseos            376 k</span><br><span class="line">python3-dnf                      noarch         4.7.0-15.el8           baseos            550 k</span><br><span class="line">python3-dnf-plugins-core         noarch         4.0.21-18.el8          baseos            258 k</span><br><span class="line">python3-hawkey                   x86_64         0.63.0-13.el8          baseos            117 k</span><br><span class="line">python3-libdnf                   x86_64         0.63.0-13.el8          baseos            779 k</span><br><span class="line">yum                              noarch         4.7.0-15.el8           baseos            208 k</span><br><span class="line">Installing dependencies:</span><br><span class="line">python3-systemd                  x86_64         234-8.el8              appstream          81 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================================</span><br><span class="line">Install   2 Packages</span><br><span class="line">Upgrade  10 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 3.8 M</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/12): python3-systemd-234-8.el8.x86_64.rpm                    2.9 MB/s |  81 kB     00:00</span><br><span class="line">(2/12): yum-utils-4.0.21-18.el8.noarch.rpm                      2.2 MB/s |  75 kB     00:00</span><br><span class="line">(3/12): dnf-plugins-core-4.0.21-18.el8.noarch.rpm               4.2 MB/s |  75 kB     00:00</span><br><span class="line">(4/12): dnf-4.7.0-15.el8.noarch.rpm                             8.0 MB/s | 542 kB     00:00</span><br><span class="line">(5/12): dnf-data-4.7.0-15.el8.noarch.rpm                        3.1 MB/s | 156 kB     00:00</span><br><span class="line">(6/12): libsolv-0.7.20-4.el8.x86_64.rpm                          10 MB/s | 376 kB     00:00</span><br><span class="line">(7/12): python3-dnf-plugins-core-4.0.21-18.el8.noarch.rpm       8.2 MB/s | 258 kB     00:00</span><br><span class="line">(8/12): libdnf-0.63.0-13.el8.x86_64.rpm                         6.5 MB/s | 704 kB     00:00</span><br><span class="line">(9/12): python3-hawkey-0.63.0-13.el8.x86_64.rpm                 3.2 MB/s | 117 kB     00:00</span><br><span class="line">(10/12): python3-dnf-4.7.0-15.el8.noarch.rpm                    4.7 MB/s | 550 kB     00:00</span><br><span class="line">(11/12): yum-4.7.0-15.el8.noarch.rpm                            5.4 MB/s | 208 kB     00:00</span><br><span class="line">(12/12): python3-libdnf-0.63.0-13.el8.x86_64.rpm                9.5 MB/s | 779 kB     00:00</span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                            16 MB/s | 3.8 MB     00:00</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">Preparing        :                                                                        1/1</span><br><span class="line">Running scriptlet: libsolv-0.7.20-4.el8.x86_64                                            1/1</span><br><span class="line">Upgrading        : libsolv-0.7.20-4.el8.x86_64                                           1/22</span><br><span class="line">Upgrading        : libdnf-0.63.0-13.el8.x86_64                                           2/22</span><br><span class="line">Upgrading        : python3-libdnf-0.63.0-13.el8.x86_64                                   3/22</span><br><span class="line">Upgrading        : python3-hawkey-0.63.0-13.el8.x86_64                                   4/22</span><br><span class="line">Upgrading        : dnf-data-4.7.0-15.el8.noarch                                          5/22</span><br><span class="line">Upgrading        : python3-dnf-4.7.0-15.el8.noarch                                       6/22</span><br><span class="line">Upgrading        : dnf-4.7.0-15.el8.noarch                                               7/22</span><br><span class="line">Running scriptlet: dnf-4.7.0-15.el8.noarch                                               7/22</span><br><span class="line">Installing       : python3-systemd-234-8.el8.x86_64                                      8/22</span><br><span class="line">Upgrading        : python3-dnf-plugins-core-4.0.21-18.el8.noarch                         9/22</span><br><span class="line">Upgrading        : dnf-plugins-core-4.0.21-18.el8.noarch                                10/22</span><br><span class="line">Installing       : yum-utils-4.0.21-18.el8.noarch                                       11/22</span><br><span class="line">Upgrading        : yum-4.7.0-15.el8.noarch                                              12/22</span><br><span class="line">Cleanup          : yum-4.7.0-5.el8.noarch                                               13/22</span><br><span class="line">Running scriptlet: dnf-4.7.0-5.el8.noarch                                               14/22</span><br><span class="line">Cleanup          : dnf-4.7.0-5.el8.noarch                                               14/22</span><br><span class="line">Running scriptlet: dnf-4.7.0-5.el8.noarch                                               14/22</span><br><span class="line">Cleanup          : dnf-plugins-core-4.0.21-7.el8.noarch                                 15/22</span><br><span class="line">Cleanup          : python3-dnf-plugins-core-4.0.21-7.el8.noarch                         16/22</span><br><span class="line">Cleanup          : python3-dnf-4.7.0-5.el8.noarch                                       17/22</span><br><span class="line">Cleanup          : python3-hawkey-0.63.0-5.el8.x86_64                                   18/22</span><br><span class="line">Cleanup          : dnf-data-4.7.0-5.el8.noarch                                          19/22</span><br><span class="line">Cleanup          : python3-libdnf-0.63.0-5.el8.x86_64                                   20/22</span><br><span class="line">Cleanup          : libdnf-0.63.0-5.el8.x86_64                                           21/22</span><br><span class="line">Cleanup          : libsolv-0.7.20-1.el8.x86_64                                          22/22</span><br><span class="line">Running scriptlet: libsolv-0.7.20-1.el8.x86_64                                          22/22</span><br><span class="line">Verifying        : python3-systemd-234-8.el8.x86_64                                      1/22</span><br><span class="line">Verifying        : yum-utils-4.0.21-18.el8.noarch                                        2/22</span><br><span class="line">Verifying        : dnf-4.7.0-15.el8.noarch                                               3/22</span><br><span class="line">Verifying        : dnf-4.7.0-5.el8.noarch                                                4/22</span><br><span class="line">Verifying        : dnf-data-4.7.0-15.el8.noarch                                          5/22</span><br><span class="line">Verifying        : dnf-data-4.7.0-5.el8.noarch                                           6/22</span><br><span class="line">Verifying        : dnf-plugins-core-4.0.21-18.el8.noarch                                 7/22</span><br><span class="line">Verifying        : dnf-plugins-core-4.0.21-7.el8.noarch                                  8/22</span><br><span class="line">Verifying        : libdnf-0.63.0-13.el8.x86_64                                           9/22</span><br><span class="line">Verifying        : libdnf-0.63.0-5.el8.x86_64                                           10/22</span><br><span class="line">Verifying        : libsolv-0.7.20-4.el8.x86_64                                          11/22</span><br><span class="line">Verifying        : libsolv-0.7.20-1.el8.x86_64                                          12/22</span><br><span class="line">Verifying        : python3-dnf-4.7.0-15.el8.noarch                                      13/22</span><br><span class="line">Verifying        : python3-dnf-4.7.0-5.el8.noarch                                       14/22</span><br><span class="line">Verifying        : python3-dnf-plugins-core-4.0.21-18.el8.noarch                        15/22</span><br><span class="line">Verifying        : python3-dnf-plugins-core-4.0.21-7.el8.noarch                         16/22</span><br><span class="line">Verifying        : python3-hawkey-0.63.0-13.el8.x86_64                                  17/22</span><br><span class="line">Verifying        : python3-hawkey-0.63.0-5.el8.x86_64                                   18/22</span><br><span class="line">Verifying        : python3-libdnf-0.63.0-13.el8.x86_64                                  19/22</span><br><span class="line">Verifying        : python3-libdnf-0.63.0-5.el8.x86_64                                   20/22</span><br><span class="line">Verifying        : yum-4.7.0-15.el8.noarch                                              21/22</span><br><span class="line">Verifying        : yum-4.7.0-5.el8.noarch                                               22/22</span><br><span class="line"></span><br><span class="line">Upgraded:</span><br><span class="line">dnf-4.7.0-15.el8.noarch                             dnf-data-4.7.0-15.el8.noarch</span><br><span class="line">dnf-plugins-core-4.0.21-18.el8.noarch               libdnf-0.63.0-13.el8.x86_64</span><br><span class="line">libsolv-0.7.20-4.el8.x86_64                         python3-dnf-4.7.0-15.el8.noarch</span><br><span class="line">python3-dnf-plugins-core-4.0.21-18.el8.noarch       python3-hawkey-0.63.0-13.el8.x86_64</span><br><span class="line">python3-libdnf-0.63.0-13.el8.x86_64                 yum-4.7.0-15.el8.noarch</span><br><span class="line">Installed:</span><br><span class="line">python3-systemd-234-8.el8.x86_64                yum-utils-4.0.21-18.el8.noarch</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line"></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># yum-config-manager \</span></span><br><span class="line">&gt; --add-repo \</span><br><span class="line">&gt; http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8</span><br><span class="line">Adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo yum install -y docker-ce docker-ce-cli containerd.io</span></span><br><span class="line">Failed to <span class="built_in">set</span> locale, defaulting to C.UTF-8</span><br><span class="line">Docker CE Stable - x86_64                                       153 kB/s |  40 kB     00:00</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================================</span><br><span class="line">Package                 Arch   Version                                  Repository        Size</span><br><span class="line">================================================================================================</span><br><span class="line">Installing:</span><br><span class="line">containerd.io           x86_64 1.6.20-3.1.el8                           docker-ce-stable  34 M</span><br><span class="line">docker-ce               x86_64 3:23.0.3-1.el8                           docker-ce-stable  23 M</span><br><span class="line">docker-ce-cli           x86_64 1:23.0.3-1.el8                           docker-ce-stable 7.1 M</span><br><span class="line">Installing dependencies:</span><br><span class="line">checkpolicy             x86_64 2.9-1.el8                                baseos           348 k</span><br><span class="line">container-selinux       noarch 2:2.195.1-1.module_el8.8.0+1254+78119b6e appstream         63 k</span><br><span class="line">docker-ce-rootless-extras</span><br><span class="line">x86_64 23.0.3-1.el8                             docker-ce-stable 4.8 M</span><br><span class="line">fuse-common             x86_64 3.3.0-16.el8                             baseos            22 k</span><br><span class="line">fuse-overlayfs          x86_64 1.10-1.module_el8.8.0+1254+78119b6e      appstream         74 k</span><br><span class="line">fuse3                   x86_64 3.3.0-16.el8                             baseos            54 k</span><br><span class="line">fuse3-libs              x86_64 3.3.0-16.el8                             baseos            95 k</span><br><span class="line">libcgroup               x86_64 0.41-19.el8                              baseos            70 k</span><br><span class="line">libslirp                x86_64 4.4.0-1.module_el8.7.0+1216+b022c01d     appstream         70 k</span><br><span class="line">policycoreutils-python-utils</span><br><span class="line">noarch 2.9-17.el8                               baseos           252 k</span><br><span class="line">python3-audit           x86_64 3.0-0.17.20191104git1c2f876.el8          baseos            86 k</span><br><span class="line">python3-libsemanage     x86_64 2.9-6.el8                                baseos           127 k</span><br><span class="line">python3-policycoreutils noarch 2.9-17.el8                               baseos           2.2 M</span><br><span class="line">python3-setools         x86_64 4.3.0-3.el8                              baseos           624 k</span><br><span class="line">slirp4netns             x86_64 1.2.0-2.module_el8.7.0+1216+b022c01d     appstream         54 k</span><br><span class="line">Installing weak dependencies:</span><br><span class="line">docker-buildx-plugin    x86_64 0.10.4-1.el8                             docker-ce-stable  12 M</span><br><span class="line">docker-compose-plugin   x86_64 2.17.2-1.el8                             docker-ce-stable  12 M</span><br><span class="line">Enabling module streams:</span><br><span class="line">container-tools                rhel8</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================================</span><br><span class="line">Install  20 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 97 M</span><br><span class="line">Installed size: 367 M</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/20): container-selinux-2.195.1-1.module_el8.8.0+1254+78119b6 1.6 MB/s |  63 kB     00:00</span><br><span class="line">(2/20): fuse-overlayfs-1.10-1.module_el8.8.0+1254+78119b6e.x86_ 1.6 MB/s |  74 kB     00:00</span><br><span class="line">(3/20): libslirp-4.4.0-1.module_el8.7.0+1216+b022c01d.x86_64.rp 1.3 MB/s |  70 kB     00:00</span><br><span class="line">(4/20): slirp4netns-1.2.0-2.module_el8.7.0+1216+b022c01d.x86_64 2.6 MB/s |  54 kB     00:00</span><br><span class="line">(5/20): fuse-common-3.3.0-16.el8.x86_64.rpm                     1.6 MB/s |  22 kB     00:00</span><br><span class="line">(6/20): fuse3-3.3.0-16.el8.x86_64.rpm                           3.2 MB/s |  54 kB     00:00</span><br><span class="line">(7/20): fuse3-libs-3.3.0-16.el8.x86_64.rpm                      4.0 MB/s |  95 kB     00:00</span><br><span class="line">(8/20): libcgroup-0.41-19.el8.x86_64.rpm                        3.0 MB/s |  70 kB     00:00</span><br><span class="line">(9/20): checkpolicy-2.9-1.el8.x86_64.rpm                        4.3 MB/s | 348 kB     00:00</span><br><span class="line">(10/20): python3-audit-3.0-0.17.20191104git1c2f876.el8.x86_64.r 2.8 MB/s |  86 kB     00:00</span><br><span class="line">(11/20): policycoreutils-python-utils-2.9-17.el8.noarch.rpm     4.6 MB/s | 252 kB     00:00</span><br><span class="line">(12/20): python3-libsemanage-2.9-6.el8.x86_64.rpm               3.6 MB/s | 127 kB     00:00</span><br><span class="line">(13/20): python3-setools-4.3.0-3.el8.x86_64.rpm                 6.8 MB/s | 624 kB     00:00</span><br><span class="line">(14/20): python3-policycoreutils-2.9-17.el8.noarch.rpm          7.9 MB/s | 2.2 MB     00:00</span><br><span class="line">(15/20): docker-buildx-plugin-0.10.4-1.el8.x86_64.rpm           634 kB/s |  12 MB     00:19</span><br><span class="line">(16/20): docker-ce-cli-23.0.3-1.el8.x86_64.rpm                  623 kB/s | 7.1 MB     00:11</span><br><span class="line">(17/20): docker-ce-23.0.3-1.el8.x86_64.rpm                      661 kB/s |  23 MB     00:36</span><br><span class="line">(18/20): docker-ce-rootless-extras-23.0.3-1.el8.x86_64.rpm      676 kB/s | 4.8 MB     00:07</span><br><span class="line">(19/20): containerd.io-1.6.20-3.1.el8.x86_64.rpm                714 kB/s |  34 MB     00:48</span><br><span class="line">(20/20): docker-compose-plugin-2.17.2-1.el8.x86_64.rpm          761 kB/s |  12 MB     00:15</span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                           1.9 MB/s |  97 MB     00:52</span><br><span class="line">Docker CE Stable - x86_64                                        18 kB/s | 1.6 kB     00:00</span><br><span class="line">Importing GPG key 0x621E9F35:</span><br><span class="line">Userid     : <span class="string">&quot;Docker Release (CE rpm) &lt;docker@docker.com&gt;&quot;</span></span><br><span class="line">Fingerprint: 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35</span><br><span class="line">From       : https://mirrors.aliyun.com/docker-ce/linux/centos/gpg</span><br><span class="line">Key imported successfully</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">Preparing        :                                                                        1/1</span><br><span class="line">Installing       : docker-compose-plugin-2.17.2-1.el8.x86_64                             1/20</span><br><span class="line">Running scriptlet: docker-compose-plugin-2.17.2-1.el8.x86_64                             1/20</span><br><span class="line">Installing       : fuse3-libs-3.3.0-16.el8.x86_64                                        2/20</span><br><span class="line">Running scriptlet: fuse3-libs-3.3.0-16.el8.x86_64                                        2/20</span><br><span class="line">Installing       : docker-buildx-plugin-0.10.4-1.el8.x86_64                              3/20</span><br><span class="line">Running scriptlet: docker-buildx-plugin-0.10.4-1.el8.x86_64                              3/20</span><br><span class="line">Installing       : docker-ce-cli-1:23.0.3-1.el8.x86_64                                   4/20</span><br><span class="line">Running scriptlet: docker-ce-cli-1:23.0.3-1.el8.x86_64                                   4/20</span><br><span class="line">Installing       : python3-setools-4.3.0-3.el8.x86_64                                    5/20</span><br><span class="line">Installing       : python3-libsemanage-2.9-6.el8.x86_64                                  6/20</span><br><span class="line">Installing       : python3-audit-3.0-0.17.20191104git1c2f876.el8.x86_64                  7/20</span><br><span class="line">Running scriptlet: libcgroup-0.41-19.el8.x86_64                                          8/20</span><br><span class="line">Installing       : libcgroup-0.41-19.el8.x86_64                                          8/20</span><br><span class="line">Running scriptlet: libcgroup-0.41-19.el8.x86_64                                          8/20</span><br><span class="line">Installing       : fuse-common-3.3.0-16.el8.x86_64                                       9/20</span><br><span class="line">Installing       : fuse3-3.3.0-16.el8.x86_64                                            10/20</span><br><span class="line">Installing       : fuse-overlayfs-1.10-1.module_el8.8.0+1254+78119b6e.x86_64            11/20</span><br><span class="line">Running scriptlet: fuse-overlayfs-1.10-1.module_el8.8.0+1254+78119b6e.x86_64            11/20</span><br><span class="line">Installing       : checkpolicy-2.9-1.el8.x86_64                                         12/20</span><br><span class="line">Installing       : python3-policycoreutils-2.9-17.el8.noarch                            13/20</span><br><span class="line">Installing       : policycoreutils-python-utils-2.9-17.el8.noarch                       14/20</span><br><span class="line">Running scriptlet: container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch    15/20</span><br><span class="line">Installing       : container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch    15/20</span><br><span class="line">Running scriptlet: container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch    15/20</span><br><span class="line"></span><br><span class="line">Installing       : containerd.io-1.6.20-3.1.el8.x86_64                                  16/20</span><br><span class="line">Running scriptlet: containerd.io-1.6.20-3.1.el8.x86_64                                  16/20</span><br><span class="line">Installing       : libslirp-4.4.0-1.module_el8.7.0+1216+b022c01d.x86_64                 17/20</span><br><span class="line">Installing       : slirp4netns-1.2.0-2.module_el8.7.0+1216+b022c01d.x86_64              18/20</span><br><span class="line">Installing       : docker-ce-rootless-extras-23.0.3-1.el8.x86_64                        19/20</span><br><span class="line">Running scriptlet: docker-ce-rootless-extras-23.0.3-1.el8.x86_64                        19/20</span><br><span class="line">Installing       : docker-ce-3:23.0.3-1.el8.x86_64                                      20/20</span><br><span class="line">Running scriptlet: docker-ce-3:23.0.3-1.el8.x86_64                                      20/20</span><br><span class="line">Running scriptlet: container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch    20/20</span><br><span class="line">Running scriptlet: docker-ce-3:23.0.3-1.el8.x86_64                                      20/20</span><br><span class="line">Verifying        : container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch     1/20</span><br><span class="line">Verifying        : fuse-overlayfs-1.10-1.module_el8.8.0+1254+78119b6e.x86_64             2/20</span><br><span class="line">Verifying        : libslirp-4.4.0-1.module_el8.7.0+1216+b022c01d.x86_64                  3/20</span><br><span class="line">Verifying        : slirp4netns-1.2.0-2.module_el8.7.0+1216+b022c01d.x86_64               4/20</span><br><span class="line">Verifying        : checkpolicy-2.9-1.el8.x86_64                                          5/20</span><br><span class="line">Verifying        : fuse-common-3.3.0-16.el8.x86_64                                       6/20</span><br><span class="line">Verifying        : fuse3-3.3.0-16.el8.x86_64                                             7/20</span><br><span class="line">Verifying        : fuse3-libs-3.3.0-16.el8.x86_64                                        8/20</span><br><span class="line">Verifying        : libcgroup-0.41-19.el8.x86_64                                          9/20</span><br><span class="line">Verifying        : policycoreutils-python-utils-2.9-17.el8.noarch                       10/20</span><br><span class="line">Verifying        : python3-audit-3.0-0.17.20191104git1c2f876.el8.x86_64                 11/20</span><br><span class="line">Verifying        : python3-libsemanage-2.9-6.el8.x86_64                                 12/20</span><br><span class="line">Verifying        : python3-policycoreutils-2.9-17.el8.noarch                            13/20</span><br><span class="line">Verifying        : python3-setools-4.3.0-3.el8.x86_64                                   14/20</span><br><span class="line">Verifying        : containerd.io-1.6.20-3.1.el8.x86_64                                  15/20</span><br><span class="line">Verifying        : docker-buildx-plugin-0.10.4-1.el8.x86_64                             16/20</span><br><span class="line">Verifying        : docker-ce-3:23.0.3-1.el8.x86_64                                      17/20</span><br><span class="line">Verifying        : docker-ce-cli-1:23.0.3-1.el8.x86_64                                  18/20</span><br><span class="line">Verifying        : docker-ce-rootless-extras-23.0.3-1.el8.x86_64                        19/20</span><br><span class="line">Verifying        : docker-compose-plugin-2.17.2-1.el8.x86_64                            20/20</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">checkpolicy-2.9-1.el8.x86_64</span><br><span class="line">container-selinux-2:2.195.1-1.module_el8.8.0+1254+78119b6e.noarch</span><br><span class="line">containerd.io-1.6.20-3.1.el8.x86_64</span><br><span class="line">docker-buildx-plugin-0.10.4-1.el8.x86_64</span><br><span class="line">docker-ce-3:23.0.3-1.el8.x86_64</span><br><span class="line">docker-ce-cli-1:23.0.3-1.el8.x86_64</span><br><span class="line">docker-ce-rootless-extras-23.0.3-1.el8.x86_64</span><br><span class="line">docker-compose-plugin-2.17.2-1.el8.x86_64</span><br><span class="line">fuse-common-3.3.0-16.el8.x86_64</span><br><span class="line">fuse-overlayfs-1.10-1.module_el8.8.0+1254+78119b6e.x86_64</span><br><span class="line">fuse3-3.3.0-16.el8.x86_64</span><br><span class="line">fuse3-libs-3.3.0-16.el8.x86_64</span><br><span class="line">libcgroup-0.41-19.el8.x86_64</span><br><span class="line">libslirp-4.4.0-1.module_el8.7.0+1216+b022c01d.x86_64</span><br><span class="line">policycoreutils-python-utils-2.9-17.el8.noarch</span><br><span class="line">python3-audit-3.0-0.17.20191104git1c2f876.el8.x86_64</span><br><span class="line">python3-libsemanage-2.9-6.el8.x86_64</span><br><span class="line">python3-policycoreutils-2.9-17.el8.noarch</span><br><span class="line">python3-setools-4.3.0-3.el8.x86_64</span><br><span class="line">slirp4netns-1.2.0-2.module_el8.7.0+1216+b022c01d.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment">#</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># systemctl enable docker --now</span></span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /usr/lib/systemd/system/docker.service.</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># echo &quot;export LC_ALL=en_US.UTF8&quot; &gt;&gt; /etc/profile</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># mkdir -p /etc/docker</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://82m9ar63.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">&gt;   <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">&gt;   <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">&gt;   <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">&gt;     <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">&gt;   &#125;,</span><br><span class="line">&gt;   <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; EOF</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://82m9ar63.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line"><span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line"><span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line"><span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo systemctl daemon-reload</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo systemctl restart docker</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment">#</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;安装过程&quot;&gt;&lt;a href=&quot;#安装过程&quot; class=&quot;headerlink&quot; title=&quot;安装过程&quot;&gt;&lt;/a&gt;安装过程&lt;/h3&gt;</summary>
    
    
    
    <category term="Docker" scheme="http://example.com/categories/Docker/"/>
    
    <category term="DevOps" scheme="http://example.com/categories/Docker/DevOps/"/>
    
    <category term="Linux" scheme="http://example.com/categories/Docker/DevOps/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="DevOps" scheme="http://example.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>阿里云Docker镜像加速</title>
    <link href="http://example.com/2023/04/08/%E9%98%BF%E9%87%8C%E4%BA%91Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
    <id>http://example.com/2023/04/08/%E9%98%BF%E9%87%8C%E4%BA%91Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</id>
    <published>2023-04-08T01:51:36.000Z</published>
    <updated>2023-04-08T02:08:55.451Z</updated>
    
    <content type="html"><![CDATA[<h4 id="阿里云镜像源"><a href="#阿里云镜像源" class="headerlink" title="阿里云镜像源"></a>阿里云镜像源</h4><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-3-centos ~]<span class="comment"># mkdir -p /etc/docker</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://82m9ar63.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">&gt;   <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">&gt;   <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">&gt;   <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">&gt;     <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">&gt;   &#125;,</span><br><span class="line">&gt;   <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; EOF</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://82m9ar63.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo systemctl daemon-reload</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># sudo systemctl restart docker</span></span><br><span class="line">[root@VM-4-3-centos ~]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;阿里云镜像源&quot;&gt;&lt;a href=&quot;#阿里云镜像源&quot; class=&quot;headerlink&quot; title=&quot;阿里云镜像源&quot;&gt;&lt;/a&gt;阿里云镜像源&lt;/h4&gt;</summary>
    
    
    
    <category term="docker" scheme="http://example.com/categories/docker/"/>
    
    <category term="运维" scheme="http://example.com/categories/docker/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="DevOps" scheme="http://example.com/categories/docker/%E8%BF%90%E7%BB%B4/DevOps/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="运维" scheme="http://example.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Windows10&amp;11官方系统盘制作教程</title>
    <link href="http://example.com/2023/04/03/Windows10-11%E5%AE%98%E6%96%B9%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2023/04/03/Windows10-11%E5%AE%98%E6%96%B9%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B/</id>
    <published>2023-04-03T06:21:44.000Z</published>
    <updated>2023-04-03T06:23:46.058Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本次做系统盘，采用官方的方式制作：</p><p>注意：U盘最少要<code>8G</code>及其以上的空U盘，为了避免出错，在开展一下步骤之前还是先给U盘数据备份好，然后对U盘进行格式化</p></blockquote><span id="more"></span><h3 id="第一步：去微软镜像官方下载网站"><a href="#第一步：去微软镜像官方下载网站" class="headerlink" title="第一步：去微软镜像官方下载网站"></a>第一步：去微软镜像官方下载网站</h3><h4 id="Window10镜像-https-www-microsoft-com-zh-cn-software-download-windows10"><a href="#Window10镜像-https-www-microsoft-com-zh-cn-software-download-windows10" class="headerlink" title="Window10镜像: https://www.microsoft.com/zh-cn/software-download/windows10/"></a><code>Window10</code>镜像: <a href="https://www.microsoft.com/zh-cn/software-download/windows10/">https://www.microsoft.com/zh-cn/software-download/windows10/</a></h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031022123.png" alt="image-20230403102222753"></p><h4 id="Window11镜像-https-www-microsoft-com-zh-cn-software-download-windows11"><a href="#Window11镜像-https-www-microsoft-com-zh-cn-software-download-windows11" class="headerlink" title="Window11镜像:https://www.microsoft.com/zh-cn/software-download/windows11/"></a><code>Window11镜像</code>:<a href="https://www.microsoft.com/zh-cn/software-download/windows11/">https://www.microsoft.com/zh-cn/software-download/windows11/</a></h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031022354.png" alt="image-20230403102242020"></p><h3 id="第二步：以Windows10为例，开始制作系统盘，下载制作工具，点击立即下载工具"><a href="#第二步：以Windows10为例，开始制作系统盘，下载制作工具，点击立即下载工具" class="headerlink" title="第二步：以Windows10为例，开始制作系统盘，下载制作工具，点击立即下载工具"></a>第二步：以<code>Windows10</code>为例，开始制作系统盘，下载制作工具，点击<code>立即下载工具</code></h3><p>​<img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031025068.png" alt="image-20230403102511706"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031027631.png" alt="image-20230403102712343"></p><h3 id="第三步：下载好以后双击打开运行，会出现下图界面"><a href="#第三步：下载好以后双击打开运行，会出现下图界面" class="headerlink" title="第三步：下载好以后双击打开运行，会出现下图界面"></a>第三步：下载好以后双击打开运行，会出现下图界面</h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031028052.png" alt="image-20230403102836981"></p><h4 id="第四步：选择接受-gt-再选择为另一台电脑创建安装介质（U盘、DVD、或ISO文件）-gt-下一步-gt-下一步"><a href="#第四步：选择接受-gt-再选择为另一台电脑创建安装介质（U盘、DVD、或ISO文件）-gt-下一步-gt-下一步" class="headerlink" title="第四步：选择接受-&gt;再选择为另一台电脑创建安装介质（U盘、DVD、或ISO文件）-&gt;下一步-&gt;下一步"></a>第四步：选择<code>接受</code>-&gt;再选择<code>为另一台电脑创建安装介质（U盘、DVD、或ISO文件）</code>-&gt;下一步-&gt;下一步</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031029150.png" alt="image-20230403102942082"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031034181.png" alt="image-20230403103408109"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031034314.png" alt="image-20230403103447243"></p><h3 id="第五步：选择你要安装系统的U盘，下一步，等待U盘写入完成"><a href="#第五步：选择你要安装系统的U盘，下一步，等待U盘写入完成" class="headerlink" title="第五步：选择你要安装系统的U盘，下一步，等待U盘写入完成"></a>第五步：选择你要安装系统的U盘，下一步，等待U盘写入完成</h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202304031037842.png" alt="image-20230403103728772"></p><h3 id="第六步：等待U盘写入百分之百，成功以后会有提示，U盘制作完成"><a href="#第六步：等待U盘写入百分之百，成功以后会有提示，U盘制作完成" class="headerlink" title="第六步：等待U盘写入百分之百，成功以后会有提示，U盘制作完成~"></a>第六步：等待U盘写入百分之百，成功以后会有提示，U盘制作完成~</h3><blockquote><p>注意在U盘写入过程中，不要对U盘进行插拔或者是弹出操作，不然会写入不成功，不成功则需要重新操作</p><p>上诉过程中截图的是<code>Windows10</code>的制作过程，<code>Windows11</code>也是一模一样，没有差别</p></blockquote><p>以上就是<code>Windows10&amp;11</code>官方系统盘制作过程，当然系统盘的制作不仅仅是这一种，但是这种是最傻瓜式的，希望小白也都能看懂~</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本次做系统盘，采用官方的方式制作：&lt;/p&gt;
&lt;p&gt;注意：U盘最少要&lt;code&gt;8G&lt;/code&gt;及其以上的空U盘，为了避免出错，在开展一下步骤之前还是先给U盘数据备份好，然后对U盘进行格式化&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Windows10" scheme="http://example.com/categories/Windows10/"/>
    
    <category term="系统安装" scheme="http://example.com/categories/Windows10/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="Windows 10" scheme="http://example.com/tags/Windows-10/"/>
    
    <category term="Windows 11" scheme="http://example.com/tags/Windows-11/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew安装报错Error:Command failed with exit 128: git</title>
    <link href="http://example.com/2023/04/02/Homebrew%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99Error-Command-failed-with-exit-128-git/"/>
    <id>http://example.com/2023/04/02/Homebrew%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99Error-Command-failed-with-exit-128-git/</id>
    <published>2023-04-02T00:03:36.000Z</published>
    <updated>2023-04-15T05:16:53.913Z</updated>
    
    <content type="html"><![CDATA[<p>安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install telnet</span><br></pre></td></tr></table></figure><span id="more"></span><p>打印报错信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: not in a git directory</span><br><span class="line"></span><br><span class="line">Error: Command failed with exit 128: git</span><br></pre></td></tr></table></figure><p>解决方式：</p><p>首先执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset HOMEBREW_BOTTLE_DOMAIN</span><br></pre></td></tr></table></figure><p>然后执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --add safe.directory /opt/homebrew/Library/Taps/homebrew/homebrew-core</span><br><span class="line">git config --global --add safe.directory /opt/homebrew/Library/Taps/homebrew/homebrew-cask</span><br></pre></td></tr></table></figure><p>当然执行这个两个命令是不分前后的，都可以，但是都要执行，然后就是成功解决了报错问题!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;安装命令：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install telnet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="macOS" scheme="http://example.com/categories/macOS/"/>
    
    <category term="Homebrew" scheme="http://example.com/categories/macOS/Homebrew/"/>
    
    
    <category term="Mac" scheme="http://example.com/tags/Mac/"/>
    
    <category term="homebrew" scheme="http://example.com/tags/homebrew/"/>
    
  </entry>
  
  <entry>
    <title>Windows修改固定IP和网络</title>
    <link href="http://example.com/2023/04/01/Windows%E4%BF%AE%E6%94%B9%E5%9B%BA%E5%AE%9AIP%E5%92%8C%E7%BD%91%E7%BB%9C/"/>
    <id>http://example.com/2023/04/01/Windows%E4%BF%AE%E6%94%B9%E5%9B%BA%E5%AE%9AIP%E5%92%8C%E7%BD%91%E7%BB%9C/</id>
    <published>2023-04-01T08:56:57.000Z</published>
    <updated>2023-04-01T09:00:05.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改固定IP"><a href="#修改固定IP" class="headerlink" title="修改固定IP"></a>修改固定IP</h2><p>​<strong>修改和固定<code>IP</code>，就是查找的IP的第二种方式的基础上进行操作</strong></p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401161930369.png" alt="image-20230401161930369"></p><p>​<strong>如上图的更改适配器，进行操作，<code>选择以太网</code>-&gt;<code>鼠标右键</code> -&gt;<code>点击属性</code></strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401162239432.png" alt="image-20230401162239432"></p><p>​<strong>双击下图标注的<code>IPv4</code></strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401162323793-20230401163312323.png"></p><p>​<strong>双击以后会出现下面的这种情况</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401163413779.png" alt="image-20230401163413779"></p><p><strong>通常情况下都是自动获取<code>DHCP</code>，双击以后也就是空白的，如果你需要固定IP，需要给对应的<code>ip</code>、<code>子网掩码</code>、<code>网关</code>填写即可。</strong></p><h2 id="重置网络"><a href="#重置网络" class="headerlink" title="重置网络"></a>重置网络</h2><blockquote><p>注：再非必要情况下最好不要进行网络重置</p></blockquote><p><strong>搜索<code>cmd</code>,然后右键<code>管理员</code>运行</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401164745531.png" alt="image-20230401164745531"></p><p><strong>打开以后输入<code>netsh winsock reset</code>,然后进行回车即可。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401165032282.png" alt="image-20230401165032282"></p><p><strong>出现上面这种情况也就代表你的网络重置成功，这时候电脑需要重启，然后将电脑重启即可。</strong></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;修改固定IP&quot;&gt;&lt;a href=&quot;#修改固定IP&quot; class=&quot;headerlink&quot; title=&quot;修改固定IP&quot;&gt;&lt;/a&gt;修改固定IP&lt;/h2&gt;&lt;p&gt;​	&lt;strong&gt;修改和固定&lt;code&gt;IP&lt;/code&gt;，就是查找的IP的第二种方式的基础上进行操作&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="IP" scheme="http://example.com/categories/IP/"/>
    
    <category term="Windows" scheme="http://example.com/categories/IP/Windows/"/>
    
    <category term="网络" scheme="http://example.com/categories/IP/Windows/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="Windows" scheme="http://example.com/tags/Windows/"/>
    
    <category term="IP" scheme="http://example.com/tags/IP/"/>
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>查询Windows IP</title>
    <link href="http://example.com/2023/04/01/%E6%9F%A5%E8%AF%A2Windows-IP/"/>
    <id>http://example.com/2023/04/01/%E6%9F%A5%E8%AF%A2Windows-IP/</id>
    <published>2023-04-01T08:54:10.000Z</published>
    <updated>2023-04-01T09:00:05.829Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h2><h3 id="一、如何知道我们本机的IP地址"><a href="#一、如何知道我们本机的IP地址" class="headerlink" title="一、如何知道我们本机的IP地址"></a>一、如何知道我们本机的IP地址</h3><h4 id="第一步：首先电脑上面的快捷键win-R"><a href="#第一步：首先电脑上面的快捷键win-R" class="headerlink" title="第一步：首先电脑上面的快捷键win + R"></a>第一步：<strong>首先电脑上面的快捷键<code>win</code> + <code>R</code></strong></h4><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401155701051.png" alt="image-20230401155701051"></p><h4 id="第二步：然后在打开这个选项中输入cmd-然后回车"><a href="#第二步：然后在打开这个选项中输入cmd-然后回车" class="headerlink" title="第二步：然后在打开这个选项中输入cmd,然后回车"></a>第二步：<strong>然后在打开这个选项中输入<code>cmd</code>,然后回车</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401155900762.png" alt="image-20230401155900762"></p><h4 id="第三步：输入命令：ipconfig-然后进行回车"><a href="#第三步：输入命令：ipconfig-然后进行回车" class="headerlink" title="第三步：输入命令：ipconfig,然后进行回车"></a>第三步：<strong>输入命令：<code>ipconfig</code>,然后进行回车</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401160113210.png" alt="image-20230401160113210"></p><blockquote><p>注意这时候我标注出来的IPv4的地址就是一般所需要的地址</p></blockquote><h2 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h2><h4 id="第一步：搜索控制面板，然后进行回车"><a href="#第一步：搜索控制面板，然后进行回车" class="headerlink" title="第一步：搜索控制面板，然后进行回车"></a>第一步：搜索控制面板，然后进行回车</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401160747545.png" alt="image-20230401160747545"></p><h4 id="第二步：选择网络和Internet"><a href="#第二步：选择网络和Internet" class="headerlink" title="第二步：选择网络和Internet"></a>第二步：选择<code>网络和Internet</code></h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401160937333.png" alt="image-20230401160937333"></p><h4 id="第三步：点击网络共享中心"><a href="#第三步：点击网络共享中心" class="headerlink" title="第三步：点击网络共享中心"></a>第三步：点击网络共享中心</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401161048431.png" alt="image-20230401161048431"></p><p>​第四步：点击<code>更改适配器</code>-&gt;<code>双击以太网</code>-&gt;点开<code>详细信息</code>就可以看到IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/MacPicuture/image/image-20230401161421970.png" alt="image-20230401161421970"></p><blockquote><p>以上就是如何查看电脑IP的方式，当然查看的IP的方式不仅仅是这这两种，也可以在设置网络里面进行直接的查看，还有其他方式等等…</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;方式一：&quot;&gt;&lt;a href=&quot;#方式一：&quot; class=&quot;headerlink&quot; title=&quot;方式一：&quot;&gt;&lt;/a&gt;方式一：&lt;/h2&gt;&lt;h3 id=&quot;一、如何知道我们本机的IP地址&quot;&gt;&lt;a href=&quot;#一、如何知道我们本机的IP地址&quot; class=&quot;headerlink&quot; title=&quot;一、如何知道我们本机的IP地址&quot;&gt;&lt;/a&gt;一、如何知道我们本机的IP地址&lt;/h3&gt;&lt;h4 id=&quot;第一步：首先电脑上面的快捷键win-R&quot;&gt;&lt;a href=&quot;#第一步：首先电脑上面的快捷键win-R&quot; class=&quot;headerlink&quot; title=&quot;第一步：首先电脑上面的快捷键win + R&quot;&gt;&lt;/a&gt;第一步：&lt;strong&gt;首先电脑上面的快捷键&lt;code&gt;win&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;</summary>
    
    
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Windows" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/Windows/"/>
    
    
    <category term="Windows" scheme="http://example.com/tags/Windows/"/>
    
    <category term="IP" scheme="http://example.com/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>Mac Console连接交换机</title>
    <link href="http://example.com/2023/04/01/Mac-Console%E8%BF%9E%E6%8E%A5%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
    <id>http://example.com/2023/04/01/Mac-Console%E8%BF%9E%E6%8E%A5%E4%BA%A4%E6%8D%A2%E6%9C%BA/</id>
    <published>2023-04-01T03:54:59.000Z</published>
    <updated>2023-04-01T09:15:56.918Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Mac使用console连接交换机"><a href="#一、Mac使用console连接交换机" class="headerlink" title="一、Mac使用console连接交换机"></a>一、Mac使用console连接交换机</h3><p>首先使用console线和Mac连接，这时候需要用到转换器typeC转USB-A</p><span id="more"></span><p>Mac上面查看是否com口的驱动安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个tty.usbserial-A9KXFHCD就是我们com口的设备</span></span><br><span class="line">$ <span class="built_in">ls</span> /dev/* |grep usb</span><br><span class="line">/dev/tty.usbserial-A9KXFHCD</span><br></pre></td></tr></table></figure><p>安装minicom来通过com连接交换机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ brew install minicom</span><br></pre></td></tr></table></figure><p>配置minicom</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到配置</span></span><br><span class="line">$ minicom -s</span><br><span class="line">            +-----[configuration]------+</span><br><span class="line">            | Filenames and paths      |</span><br><span class="line">            | File transfer protocols  |</span><br><span class="line">            | Serial port setup        |<span class="comment"># 选择此项回车</span></span><br><span class="line">            | Modem and dialing        |</span><br><span class="line">            | Screen and keyboard      |</span><br><span class="line">            | Save setup as dfl        |</span><br><span class="line">            | Save setup as..          |</span><br><span class="line">            | Exit                     |</span><br><span class="line">            | Exit from Minicom        |</span><br><span class="line">            +--------------------------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------------------+</span><br><span class="line">| A -    Serial Device      : /dev/tty.usbserial-A9KXFHCD               |<span class="comment"># 将此设备名称改为前面ls查看到的设备名称</span></span><br><span class="line">| B - Lockfile Location     : /opt/homebrew/Cellar/minicom/2.8/var      |</span><br><span class="line">| C -   Callin Program      :                                           |</span><br><span class="line">| D -  Callout Program      :                                           |</span><br><span class="line">| E -    Bps/Par/Bits       : 9600 8N1                                  |<span class="comment"># 将此项改为9600 8N1</span></span><br><span class="line">| F - Hardware Flow Control : No                                        |<span class="comment"># 将此项改为No</span></span><br><span class="line">| G - Software Flow Control : No                                        |</span><br><span class="line">| H -     RS485 Enable      : No                                        |</span><br><span class="line">| I -   RS485 Rts On Send   : No                                        |</span><br><span class="line">| J -  RS485 Rts After Send : No                                        |</span><br><span class="line">| K -  RS485 Rx During Tx   : No                                        |</span><br><span class="line">| L -  RS485 Terminate Bus  : No                                        |</span><br><span class="line">| M - RS485 Delay Rts Before: 0                                         |</span><br><span class="line">| N - RS485 Delay Rts After : 0                                         |</span><br><span class="line">|                                                                       |</span><br><span class="line">|    Change <span class="built_in">which</span> setting?                                              |</span><br><span class="line">+-----------------------------------------------------------------------+</span><br><span class="line"><span class="comment"># 回车</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+-----[configuration]------+</span><br><span class="line">| Filenames and paths      |</span><br><span class="line">| File transfer protocols  |</span><br><span class="line">| Serial port setup        |</span><br><span class="line">| Modem and dialing        |</span><br><span class="line">| Screen and keyboard      |</span><br><span class="line">| Save setup as dfl        |<span class="comment"># 选择此项保存</span></span><br><span class="line">| Save setup as..          |</span><br><span class="line">| Exit                     |</span><br><span class="line">| Exit from Minicom        |</span><br><span class="line">+--------------------------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+-----[configuration]------+</span><br><span class="line">| Filenames and paths      |</span><br><span class="line">| File transfer protocols  |</span><br><span class="line">| Serial port setup        |</span><br><span class="line">| Modem and dialing        |</span><br><span class="line">| Screen and keyboard      |</span><br><span class="line">| Save setup as dfl        |</span><br><span class="line">| Save setup as..          |</span><br><span class="line">| Exit                     |<span class="comment"># 选择此项进入到终端</span></span><br><span class="line">| Exit from Minicom        |</span><br><span class="line">+--------------------------+</span><br></pre></td></tr></table></figure><p>进入终端以后输入密码即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ Login authentication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Password:</span><br><span class="line">&lt;Quidway&gt;</span><br></pre></td></tr></table></figure><h3 id="二、配置华为交换机web访问"><a href="#二、配置华为交换机web访问" class="headerlink" title="二、配置华为交换机web访问"></a>二、配置华为交换机web访问</h3><p>配置vlanif的管理iP，在这里我的所有管理iP都在vlan100的管理iP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view(进入系统视图)</span><br><span class="line">[Quidway]int vlanif 100（进入vlan100接口）</span><br><span class="line">[Quidway-Vlanif100]ip add 192.168.99.200 24（为vlan100配置管理ip）</span><br><span class="line">[Quidway-Vlanif100]q</span><br><span class="line">[Quidway]q</span><br></pre></td></tr></table></figure><p>查看web管理的文件包地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Quidway&gt;sys    (进入系统视图)</span><br><span class="line">[Quidway]http server load web.7z   (加载web包)</span><br><span class="line">[Quidway]http server <span class="built_in">enable</span>    (开启http服务)</span><br><span class="line">[Quidway]aaa    (进入aaa视图)</span><br><span class="line">[Quidway-aaa]local-user admin password cipher Admin123  (配置管理账号与密码)</span><br><span class="line">[Quidway-aaa]local-user admin privilege level 3   (配置管理账号级别)</span><br><span class="line">[Quidway-aaa]local-user admin service-type http   (配置接入类型为http)</span><br><span class="line">[Quidway-aaa]q   (退出)</span><br><span class="line">[Quidway]q    (退出)</span><br><span class="line">&lt;Quidway&gt;save    (保存)</span><br><span class="line">Y   (确认)</span><br></pre></td></tr></table></figure><p>至此就配置完成了，使用浏览器打开配置的管理vlanip，即可访问到交换机的管理web页面。</p><h3 id="三、交换机常用vlan配置，"><a href="#三、交换机常用vlan配置，" class="headerlink" title="三、交换机常用vlan配置，"></a>三、交换机常用vlan配置，</h3><p>vlan配置相关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看交换机vlan配置信息</span></span><br><span class="line">[Quidway]display vlan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建vlan100</span></span><br><span class="line">[Quidway]vlan 100</span><br><span class="line">[Quidway-vlan100]q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将0/0/21端口从原有vlan中移除</span></span><br><span class="line">[Quidway]int GigabitEthernet 0/0/21</span><br><span class="line">[Quidway-GigabitEthernet0/0/21]undo port default vlan</span><br></pre></td></tr></table></figure><p>创建端口组，以及添加端口组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看端口组中的成员</span></span><br><span class="line">[Quidway-port-group-200]display this</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建端口组</span></span><br><span class="line">[Quidway]port-group 100<span class="comment"># 创建端口组100，100为端口组名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将端口添加到端口组,将g0/0/1-g0/0/15添加到端口组100</span></span><br><span class="line">[Quidway-port-group-100]group-member GigabitEthernet 0/0/1 to GigabitEthernet 0/0/15</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置端口组中的端口访问模式</span></span><br><span class="line">[Quidway-port-group-100]port link-type access<span class="comment"># (这里设置为access模式，也可以是trunk模式的)；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将端口组加入到vlan</span></span><br><span class="line">[Quidway-port-group-100]port default vlan 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将22和21端口从端口组200中移除</span></span><br><span class="line">[Quidway]port-group 200</span><br><span class="line">[Quidway-port-group-200]undo  group-member GigabitEthernet 0/0/22 GigabitEthernet 0/0/21</span><br></pre></td></tr></table></figure><h3 id="四、常用路由配置"><a href="#四、常用路由配置" class="headerlink" title="四、常用路由配置"></a>四、常用路由配置</h3><p>常用配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">常用配置命令：</span><br><span class="line">1.进入视图模式</span><br><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">2.进入接口</span><br><span class="line">[Huawei]int g0/0/1<span class="comment">#进入指定接口</span></span><br><span class="line">[Huawei]user-interface console 0<span class="comment">#进入console口</span></span><br><span class="line">[Huawei-ui-console0]authentication-mode password<span class="comment">#配置console口密码验证</span></span><br><span class="line">3.查看指定接口信息包括ip地址</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]display ip interface g0/0/1</span><br><span class="line">4.为指定接口配置ip地址</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]ip add 192.168.1.111 24<span class="comment">#配ip</span></span><br><span class="line">[Huawei-GigabitEthernet0/0/1]undo ip add 192.168.1.111 24<span class="comment">#删除配置的ip</span></span><br><span class="line">5.查看路由器ip配置表</span><br><span class="line">[Huawei]display current-configuration<span class="comment">#查看ip</span></span><br><span class="line">[Huawei]display  ip routing-table<span class="comment">#查看路由表</span></span><br><span class="line">[Huawei]display  nat  session  all<span class="comment">#查看nat地址转换表</span></span><br></pre></td></tr></table></figure><p>nat配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 静态nat：在公网入站接口配置</span></span><br><span class="line">[Huawei]interface  g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]nat server global 39.105.70.100 inside 192.168.1.254<span class="comment">#将70.100静态nat到1.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态pat：</span></span><br><span class="line">[Huawei]acl number 2000<span class="comment">#使用acl匹配所有ip流量</span></span><br><span class="line">[Huawei-acl-basic-2000]rule  1 permit</span><br><span class="line">[Huawei]interface  g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]nat outbound  2000<span class="comment">#在出接口应用这个PAT规则</span></span><br></pre></td></tr></table></figure><p>开启telnet配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路由器开启telnet配置：</span></span><br><span class="line">user-interface maximum-vty 15</span><br><span class="line">user-interface vty 0 4</span><br><span class="line">authentication-mode aaa         <span class="comment"># 配置认证模式为aaa</span></span><br><span class="line">q</span><br><span class="line">aaa                                  <span class="comment"># 进入aaa视图</span></span><br><span class="line">local-user admin password cipher huawei    <span class="comment"># 配置用户名为admin，密码为huawei</span></span><br><span class="line">local-user admin privilege level 3               <span class="comment"># 设置用户权限为3</span></span><br><span class="line">local-user admin service-type telnet  ssh     <span class="comment">#  定义用户接入类型为telnet</span></span><br><span class="line">dis this                                     <span class="comment">#查看配置</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、Mac使用console连接交换机&quot;&gt;&lt;a href=&quot;#一、Mac使用console连接交换机&quot; class=&quot;headerlink&quot; title=&quot;一、Mac使用console连接交换机&quot;&gt;&lt;/a&gt;一、Mac使用console连接交换机&lt;/h3&gt;&lt;p&gt;首先使用console线和Mac连接，这时候需要用到转换器typeC转USB-A&lt;/p&gt;</summary>
    
    
    
    <category term="Switch" scheme="http://example.com/categories/Switch/"/>
    
    <category term="运维" scheme="http://example.com/categories/Switch/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Mac" scheme="http://example.com/tags/Mac/"/>
    
    <category term="Switch" scheme="http://example.com/tags/Switch/"/>
    
  </entry>
  
  <entry>
    <title>新装的Windows10,11系统和Office激活教程</title>
    <link href="http://example.com/2023/03/29/%E6%96%B0%E8%A3%85%E7%9A%84Windows10-11-%E7%B3%BB%E7%BB%9F%E5%92%8COffice-2016%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2023/03/29/%E6%96%B0%E8%A3%85%E7%9A%84Windows10-11-%E7%B3%BB%E7%BB%9F%E5%92%8COffice-2016%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</id>
    <published>2023-03-29T12:15:37.000Z</published>
    <updated>2023-04-01T02:55:06.715Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h3><p>首先我们要准备好激活软件，<code>HEU_KMS_Activator</code>这个软件的下载地址如下：<a href="https://github.com/zbezj/HEU_KMS_Activator/releases/tag/26.1.0">https://github.com/zbezj/HEU_KMS_Activator/releases/tag/26.1.0</a></p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071525532.png" alt="image-20221102093603191"><br>标志的压缩包就是要下载的软件，解压即可用，解压密码也在图中有展示。</p><h3 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h3><p>下载并解压这个软件：</p><p>双击运行此软件！</p><h3 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h3><p>打开这个软件，对电脑系统和office进行激活即可</p><p>运行上面的 <code>HEU_KMS_Activator_v26.0.0.exe</code>如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071525536.png" alt="image-20221102094027301"></p><p>然后就是点击开始就行了，耐心等待进度条走完，激活完成即可。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071525986.png" alt="image-20221102094233468"></p><h3 id="最后："><a href="#最后：" class="headerlink" title="最后："></a>最后：</h3><p>等百分之百的时候会有弹窗出来，即激活完毕。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;第一步：&quot;&gt;&lt;a href=&quot;#第一步：&quot; class=&quot;headerlink&quot; title=&quot;第一步：&quot;&gt;&lt;/a&gt;第一步：&lt;/h3&gt;&lt;p&gt;首先我们要准备好激活软件，&lt;code&gt;HEU_KMS_Activator&lt;/code&gt;这个软件的下载地址如下：&lt;a href=&quot;https://github.com/zbezj/HEU_KMS_Activator/releases/tag/26.1.0&quot;&gt;https://github.com/zbezj/HEU_KMS_Activator/releases/tag/26.1.0&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Windows教程 运维" scheme="http://example.com/categories/Windows%E6%95%99%E7%A8%8B-%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Windows10&amp;Windows11" scheme="http://example.com/tags/Windows10-Windows11/"/>
    
  </entry>
  
  <entry>
    <title>关于网络打印机教程（二）</title>
    <link href="http://example.com/2023/03/29/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2023/03/29/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2023-03-29T12:07:01.000Z</published>
    <updated>2023-03-30T00:30:46.911Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本次教程主要是针对于<code>Windows11</code>打印机连接，以及扫描仪的相关问题解答</p></blockquote><p>在一般情况下，网络打印机带扫描仪功能，对于<code>Windows7</code>和<code>Windows10</code>操作系统来说，直接去对应的官网和对应的打印机驱动网站直接下载对应的驱动即可，但是<code>Windows11</code>有点不太一样。</p><span id="more"></span><p>首先就是<code>Windows11</code>怎么添加打印机，<code>设置</code>-&gt;<code>蓝牙和其他设备</code>-&gt;<code>打印机和扫描仪</code>-&gt;<code>添加设备</code></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211250929234.png" alt="win1101"></p><p>如果你是已经连接到了打印机，这时候就可以刷新检测到了</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211250932931.png" alt="win1102"></p><p>如果手没有检测到检查线路连接的同时，手动添加设备，手动添加设备如果你不知道流程，可以回看我的教程（一），按照流程走完，检测到驱动以后会自动安装驱动。自此打印机的驱动算是完成了。</p><p>重点是扫描仪，如果打印机带扫描仪功能，<code>Windows10</code>操作系统需要你去官网或者是打印机驱动网下载驱动安装，<code>Windows11</code>则是装完驱动以后，自动扫描，如果检测不到扫描仪，原因可能是打印机驱动问题，还有可能就是系统问题，因为这个不确定因素太多，需要逐一排查。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本次教程主要是针对于&lt;code&gt;Windows11&lt;/code&gt;打印机连接，以及扫描仪的相关问题解答&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在一般情况下，网络打印机带扫描仪功能，对于&lt;code&gt;Windows7&lt;/code&gt;和&lt;code&gt;Windows10&lt;/code&gt;操作系统来说，直接去对应的官网和对应的打印机驱动网站直接下载对应的驱动即可，但是&lt;code&gt;Windows11&lt;/code&gt;有点不太一样。&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="打印机" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
    
    <category term="运维" scheme="http://example.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="打印机" scheme="http://example.com/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>关于网络打印机教程（一）</title>
    <link href="http://example.com/2023/03/29/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2023/03/29/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2023-03-29T12:05:42.000Z</published>
    <updated>2023-04-01T00:31:40.153Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注意：本教程只适合网络打印机且同一局域网打印机</p></blockquote><h3 id="鼠标右键选择个性化"><a href="#鼠标右键选择个性化" class="headerlink" title="鼠标右键选择个性化"></a>鼠标右键选择<code>个性化</code></h3><span id="more"></span><h3 id="首先选择主页："><a href="#首先选择主页：" class="headerlink" title="首先选择主页："></a>首先选择<code>主页</code>：</h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211929625.png" alt="image-20221121192919409"></p><h3 id="其次选择设备"><a href="#其次选择设备" class="headerlink" title="其次选择设备"></a>其次选择<code>设备</code></h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211930726.png" alt="image-20221121193024629"></p><h3 id="再选择设备与打印机"><a href="#再选择设备与打印机" class="headerlink" title="再选择设备与打印机"></a>再选择<code>设备与打印机</code></h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211933448.png" alt="image-20221121193302298"></p><h3 id="然后选择添加打印机"><a href="#然后选择添加打印机" class="headerlink" title="然后选择添加打印机"></a>然后选择<code>添加打印机</code></h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211934010.png" alt="image-20221121193405923"></p><blockquote><p>注意选择以后，这时候会出现自动搜索界面，搜索打印机，如果你想要连接的打印机没有在搜索的列表中，这时候就需要手动添加。如果有的话，直接选中你要连接的打印机下一步即可。等待驱动自动安装完成就结束了。</p><p>有的驱动window10系统是不能自动安装驱动，这时候需要手动下载驱动，到打印机驱动网站下载驱动就行了，网址：<a href="http://www.dyjqd.com/%EF%BC%8C%E8%87%AA%E8%A1%8C%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%9A%84%E6%89%93%E5%8D%B0%E6%9C%BA%E5%9E%8B%E5%8F%B7%E5%8D%B3%E5%8F%AF%EF%BC%8C%E8%A6%81%E6%B3%A8%E6%84%8F%E4%B8%8B%E8%BD%BD%E6%97%B6%E5%80%99%E9%80%89%E6%8B%A9%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BD%EF%BC%8C%E4%B8%8D%E8%A6%81%E4%B8%8B%E8%BD%BD%E9%94%99%E8%AF%AF%E3%80%82">http://www.dyjqd.com/，自行下载对应的打印机型号即可，要注意下载时候选择官网下载，不要下载错误。</a></p></blockquote><h4 id="下面是以惠普HP-LaserJet-M1005-MFP打印机驱动为例子："><a href="#下面是以惠普HP-LaserJet-M1005-MFP打印机驱动为例子：" class="headerlink" title="下面是以惠普HP LaserJet M1005 MFP打印机驱动为例子："></a>下面是以<code>惠普HP LaserJet M1005 MFP</code>打印机驱动为例子：</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211940929.png" alt="image-20221121194013829"></p><p>下载安装即可。</p><h4 id="回到刚才如果你在搜索框里面没有找到你的打印机，这时候应该怎么做呢？"><a href="#回到刚才如果你在搜索框里面没有找到你的打印机，这时候应该怎么做呢？" class="headerlink" title="回到刚才如果你在搜索框里面没有找到你的打印机，这时候应该怎么做呢？"></a>回到刚才如果你在搜索框里面没有找到你的打印机，这时候应该怎么做呢？</h4><h4 id="手动添加IP："><a href="#手动添加IP：" class="headerlink" title="手动添加IP："></a>手动添加IP：</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211942117.png" alt="image-20221121194200062"></p><ul><li>选择我所需要的打印机未列出，然后选择<code>使用IP地址或主机名添加打印机</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211942661.png" alt="image-20221121194254616"></p><ul><li>这里选择<code>自动检测</code>或<code>TCP/IP</code>都可以，然后输入你打印机的IP地址，然后下一步即可（PS:下图中的IP地址只是一个例子，根据自己打印机的实际情况而定）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211211946943.png" alt="image-20221121194633900"></p><ul><li>最后下一步，然后就等着搜索到打印机，安装驱动即可。</li></ul><p>最后注意，这个教程只适合网络打印机，局域网的情况下，校园网的前提是IP端口没有限制，在同一个路由器下按理来说都可以用的，这篇文章也只是适合小白，或者是不懂计算机的人，如果你在连接有时候遇到什么问题可以联系我<code>QQ：2842888712</code>，如果你是一个高手，希望你可以批评指正，希望这篇文章对你来说有些许的帮助~</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注意：本教程只适合网络打印机且同一局域网打印机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;鼠标右键选择个性化&quot;&gt;&lt;a href=&quot;#鼠标右键选择个性化&quot; class=&quot;headerlink&quot; title=&quot;鼠标右键选择个性化&quot;&gt;&lt;/a&gt;鼠标右键选择&lt;code&gt;个性化&lt;/code&gt;&lt;/h3&gt;</summary>
    
    
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="打印机" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
    
    <category term="运维" scheme="http://example.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="打印机" scheme="http://example.com/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Nginx</title>
    <link href="http://example.com/2023/03/29/Nginx/"/>
    <id>http://example.com/2023/03/29/Nginx/</id>
    <published>2023-03-29T11:56:54.000Z</published>
    <updated>2023-04-01T00:24:00.394Z</updated>
    
    <content type="html"><![CDATA[<hr><p>[TOC]</p><h3 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h3><hr><h4 id="1-1-代理问题"><a href="#1-1-代理问题" class="headerlink" title="1.1 代理问题"></a>1.1 代理问题</h4><blockquote><p>客户端到底要将请求发送给哪台服务器。</p></blockquote><span id="more"></span><table><thead><tr><th align="center">发送给服务器1还是服务器2</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071023267.png" alt="1589264952529"></td></tr></tbody></table><!--more--><h4 id="1-2-负载均衡问题"><a href="#1-2-负载均衡问题" class="headerlink" title="1.2 负载均衡问题"></a>1.2 负载均衡问题</h4><blockquote><p>如果所有客户端的请求都发送给了服务器1，那么服务器2将没有任何意义</p></blockquote><table><thead><tr><th align="center">负载均衡问题</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071024949.png" alt="1589265005701"></td></tr></tbody></table><h4 id="1-3-资源优化"><a href="#1-3-资源优化" class="headerlink" title="1.3 资源优化"></a>1.3 资源优化</h4><blockquote><p>客户端发送的请求可能是申请动态资源的，也有申请静态资源，但是都是去Tomcat中获取的</p></blockquote><table><thead><tr><th align="center">静态资源访问</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071024993.png" alt="1589265063451"></td></tr></tbody></table><h4 id="1-4-Nginx处理"><a href="#1-4-Nginx处理" class="headerlink" title="1.4 Nginx处理"></a>1.4 Nginx处理</h4><table><thead><tr><th align="center">在搭建集群后，使用Nginx</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071024840.png" alt="1589265181473"></td></tr></tbody></table><h3 id="二、Nginx概述"><a href="#二、Nginx概述" class="headerlink" title="二、Nginx概述"></a>二、Nginx概述</h3><hr><blockquote><p>Nginx是由俄罗斯人研发的，应对Rambler的网站，并且2004年发布的第一个版本。</p></blockquote><table><thead><tr><th align="center">Nginx之父</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071024237.png" alt="1586502874584"></td></tr></tbody></table><blockquote><p>Nginx的特点：</p><ul><li>稳定性极强。 7*24小时不间断运行。</li><li>Nginx提供了非常丰富的配置实例。</li><li>占用内存小，并发能力强。</li></ul></blockquote><h3 id="三、Nginx的安装"><a href="#三、Nginx的安装" class="headerlink" title="三、Nginx的安装"></a>三、Nginx的安装</h3><hr><h4 id="3-1-安装Nginx"><a href="#3-1-安装Nginx" class="headerlink" title="3.1 安装Nginx"></a>3.1 安装Nginx</h4><blockquote><p>使用Docker-Compose安装，创建docker-compose.yml写入以下内容：</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">daocloud.io/library/nginx:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]<span class="comment"># cd /opt</span></span><br><span class="line">[root@192 opt]<span class="comment"># mkdir docker_nginx</span></span><br><span class="line">[root@192 opt]<span class="comment"># cd docker_nginx/</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># vim docker-compose.yml</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose up -d</span></span><br><span class="line">Creating network <span class="string">&quot;docker_nginx_default&quot;</span> with the default driver</span><br><span class="line">Pulling nginx (daocloud.io/library/nginx:latest)...</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">45b42c59be33: Pull complete</span><br><span class="line">d0d9e9ea897e: Pull complete</span><br><span class="line">66e650438339: Pull complete</span><br><span class="line">76a3dfe4406b: Pull complete</span><br><span class="line">410ff9d97480: Pull complete</span><br><span class="line">Digest: sha256:1a53eb723d17523512bd25c27299046cfa034cce309f4ed330c943a304513f59</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> daocloud.io/library/nginx:latest</span><br><span class="line">Creating nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>浏览器访问即可（80端口可以省略不写，云服务器记得去开放80端口）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071024665.png"></p><h4 id="3-2-Nginx的配置文件"><a href="#3-2-Nginx的配置文件" class="headerlink" title="3.2 Nginx的配置文件"></a>3.2 Nginx的配置文件</h4><blockquote><p>关于Nginx的核心配置文件nginx.conf</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@192 docker_nginx]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                              COMMAND                  CREATED         STATUS         PORTS                               NAMES</span><br><span class="line">617da0b0dbbb   daocloud.io/library/nginx:latest   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   8 minutes ago   Up 8 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   nginx</span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker exec -it 617 bash</span></span><br><span class="line">root@617da0b0dbbb:/<span class="comment"># cd /etc/nginx</span></span><br><span class="line">root@617da0b0dbbb:/etc/nginx<span class="comment"># ls</span></span><br><span class="line">conf.dkoi-utf  mime.types  nginx.conf   uwsgi_params</span><br><span class="line">fastcgi_paramskoi-win  modules     scgi_params  win-utf</span><br><span class="line">root@617da0b0dbbb:/etc/nginx<span class="comment"># cat nginx.conf </span></span><br></pre></td></tr></table></figure><blockquote><p>查看nginx.conf 配置文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># 以上统称为全局块， </span></span><br><span class="line"><span class="comment"># worker_processes的数值越大，Nginx的并发能力就越强（由运维人员修改）</span></span><br><span class="line"><span class="comment"># error_log 代表Nginx的错误日志存放的位置</span></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># events块</span></span><br><span class="line"><span class="comment"># worker_connections的数值越大，Nginx的并发能力就越强（由运维人员修改）</span></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># http块</span></span><br><span class="line"><span class="comment"># include代表引入一个外部的文件 -&gt; /mime.types中放着大量的媒体类型</span></span><br><span class="line"><span class="comment"># include /etc/nginx/conf.d/*.conf; -&gt; 引入了conf.d目录下的以.conf为结尾的配置文件</span></span><br></pre></td></tr></table></figure><blockquote><p>nginx.conf 配置文件中发现，最后一行引入了conf.d目录下的*.conf文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@617da0b0dbbb:/etc/nginx<span class="comment"># ls</span></span><br><span class="line">conf.dkoi-utf  mime.types  nginx.conf   uwsgi_params</span><br><span class="line">fastcgi_paramskoi-win  modules     scgi_params  win-utf</span><br><span class="line">root@617da0b0dbbb:/etc/nginx<span class="comment"># cd conf.d/</span></span><br><span class="line">root@617da0b0dbbb:/etc/nginx/conf.d<span class="comment"># ls</span></span><br><span class="line">default.conf</span><br><span class="line">root@617da0b0dbbb:/etc/nginx/conf.d<span class="comment"># cat default.conf </span></span><br></pre></td></tr></table></figure><blockquote><p>查看default.conf 配置文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># server块</span></span><br><span class="line"><span class="comment"># listen： 代表Nginx监听的端口号</span></span><br><span class="line"><span class="comment"># localhost：代表Nginx接收请求的ip</span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    listen  [::]:80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 参数说明</span></span><br><span class="line">    <span class="comment"># location块</span></span><br><span class="line"><span class="comment"># root：将接收到的请求根据/usr/share/nginx/html去查找静态资源</span></span><br><span class="line"><span class="comment"># index： 默认去上述的路径中找到index.html或者index.htm</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-配置数据卷操作Nginx"><a href="#3-3-配置数据卷操作Nginx" class="headerlink" title="3.3 配置数据卷操作Nginx"></a>3.3 配置数据卷操作Nginx</h4><blockquote><p>为了方便修改Nginx配置，修改docker-compose.yml文件，设置 volumes ，重新启动</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">daocloud.io/library/nginx:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker_nginx/conf.d/:/etc/nginx/conf.d</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@617da0b0dbbb:/etc/nginx/conf.d<span class="comment"># exit </span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># vim docker-compose.yml </span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose down</span></span><br><span class="line">Stopping nginx ... <span class="keyword">done</span></span><br><span class="line">Removing nginx ... <span class="keyword">done</span></span><br><span class="line">Removing network docker_nginx_default</span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose up -d</span></span><br><span class="line">Creating network <span class="string">&quot;docker_nginx_default&quot;</span> with the default driver</span><br><span class="line">Creating nginx ... <span class="keyword">done</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># ls</span></span><br><span class="line">conf.d  docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><p>此时再使用浏览器访问则无法访问nginx.html页面了，此时需要在conf.d目录下创建default.conf文件，配置一个server，再重新启动即可</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    listen  [::]:80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@192 docker_nginx]<span class="comment"># cd conf.d/</span></span><br><span class="line">[root@192 conf.d]<span class="comment"># vim default.conf</span></span><br><span class="line">[root@192 conf.d]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose restart</span></span><br><span class="line">Restarting nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="四、Nginx的反向代理【重点】"><a href="#四、Nginx的反向代理【重点】" class="headerlink" title="四、Nginx的反向代理【重点】"></a>四、Nginx的反向代理【<code>重点</code>】</h3><hr><h4 id="4-1-正向代理和反向代理介绍"><a href="#4-1-正向代理和反向代理介绍" class="headerlink" title="4.1 正向代理和反向代理介绍"></a>4.1 正向代理和反向代理介绍</h4><blockquote><p>正向代理：</p><ul><li>正向代理服务是由客户端设立的。</li><li>客户端了解代理服务器和目标服务器都是谁。</li><li>帮助咱们实现突破访问权限，提高访问的速度，对目标服务器隐藏客户端的ip地址。</li></ul></blockquote><table><thead><tr><th align="center">正向代理</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071025691.png" alt="1586512751639"></td></tr></tbody></table><blockquote><p>反向代理：</p><ul><li>反向代理服务器是配置在服务端的。</li><li>客户端是不知道访问的到底是哪一台服务器。</li><li>达到负载均衡，并且可以隐藏服务器真正的ip地址。</li></ul></blockquote><p><img src="/Pictures/1586513061851.png" alt="1586513061851"></p><h4 id="4-2-基于Nginx实现反向代理"><a href="#4-2-基于Nginx实现反向代理" class="headerlink" title="4.2 基于Nginx实现反向代理"></a>4.2 基于Nginx实现反向代理</h4><blockquote><p>创建三个Tomcat，通过数据卷映射，在映射目录下创建ROOT目录，在对应的ROOT目录下再创建index.html（需要创建三个ROOT目录和三个index.html，index.html内容不要相同，用于测试）</p></blockquote><blockquote><p>docker-compose.yml内容如下：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  tomcat1:</span><br><span class="line">    restart: always</span><br><span class="line">    image: daocloud.io/library/tomcat:8.5.15-jre8</span><br><span class="line">    container_name: tomcat8081</span><br><span class="line">    ports:</span><br><span class="line">      - 8081:8080</span><br><span class="line">    environment:</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/docker_tomcats/tomcat_webapps8081:/usr/local/tomcat/webapps</span><br><span class="line">  tomcat2:</span><br><span class="line">    restart: always</span><br><span class="line">    image: daocloud.io/library/tomcat:8.5.15-jre8</span><br><span class="line">    container_name: tomcat8082</span><br><span class="line">    ports:</span><br><span class="line">      - 8082:8080</span><br><span class="line">    environment:</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/docker_tomcats/tomcat_webapps8082:/usr/local/tomcat/webapps</span><br><span class="line">  tomcat3:</span><br><span class="line">    restart: always</span><br><span class="line">    image: daocloud.io/library/tomcat:8.5.15-jre8</span><br><span class="line">    container_name: tomcat8083</span><br><span class="line">    ports:</span><br><span class="line">      - 8083:8080</span><br><span class="line">    environment:</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/docker_tomcats/tomcat_webapps8083:/usr/local/tomcat/webapps</span><br></pre></td></tr></table></figure><blockquote><p>具体步骤如下：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@192 opt]<span class="comment"># mkdir docker_tomcats</span></span><br><span class="line">[root@192 opt]<span class="comment"># cd docker_tomcats/</span></span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># vim docker-compose.yml </span></span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># docker-compose up -d</span></span><br><span class="line">Creating network <span class="string">&quot;docker_tomcats_default&quot;</span> with the default driver</span><br><span class="line">Creating tomcat8082 ... <span class="keyword">done</span></span><br><span class="line">Creating tomcat8081 ... <span class="keyword">done</span></span><br><span class="line">Creating tomcat8083 ... <span class="keyword">done</span></span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># ls</span></span><br><span class="line">docker-compose.yml  tomcat_webapps8081  tomcat_webapps8082  tomcat_webapps8083</span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># cd tomcat_webapps8081</span></span><br><span class="line">[root@192 tomcat_webapps8081]<span class="comment"># mkdir ROOT</span></span><br><span class="line">[root@192 tomcat_webapps8081]<span class="comment"># cd ROOT</span></span><br><span class="line">[root@192 ROOT]<span class="comment"># vim index.html</span></span><br><span class="line">[root@192 ROOT]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 tomcat_webapps8081]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># cd tomcat_webapps8082</span></span><br><span class="line">[root@192 tomcat_webapps8082]<span class="comment"># mkdir ROOT</span></span><br><span class="line">[root@192 tomcat_webapps8082]<span class="comment"># cd ROOT</span></span><br><span class="line">[root@192 ROOT]<span class="comment"># vim index.html</span></span><br><span class="line">[root@192 ROOT]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 tomcat_webapps8082]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_tomcats]<span class="comment"># cd tomcat_webapps8083</span></span><br><span class="line">[root@192 tomcat_webapps8083]<span class="comment"># mkdir ROOT</span></span><br><span class="line">[root@192 tomcat_webapps8083]<span class="comment"># cd ROOT</span></span><br><span class="line">[root@192 ROOT]<span class="comment"># vim index.html</span></span><br></pre></td></tr></table></figure><blockquote><p>然后修改nginx的default.conf配置文件，使其通过Nginx访问到tomcat服务器。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    listen  [::]:80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 基于反向代理访问到Tomcat服务器</span></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_pass http://192.168.25.132:8081/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@192 opt]<span class="comment"># cd docker_nginx/</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># ls</span></span><br><span class="line">conf.d  docker-compose.yml</span><br><span class="line">[root@192 docker_nginx]<span class="comment"># cd conf.d/</span></span><br><span class="line">[root@192 conf.d]<span class="comment"># ls</span></span><br><span class="line">default.conf</span><br><span class="line">[root@192 conf.d]<span class="comment"># vim default.conf </span></span><br><span class="line">[root@192 conf.d]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose restart</span></span><br><span class="line">Restarting nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>再次访问时，nginx主页直接显示到对应tomcat的页面了</p></blockquote><h4 id="4-3-关于Nginx的location路径映射"><a href="#4-3-关于Nginx的location路径映射" class="headerlink" title="4.3 关于Nginx的location路径映射"></a>4.3 关于Nginx的location路径映射</h4><blockquote><p>优先级关系如下：</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span> 直接匹配</span><br><span class="line">location = / <span class="punctuation">&#123;</span></span><br><span class="line">  # 精准匹配，主机名后面不能带任何的字符串</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">2.</span> 通用匹配</span><br><span class="line">location /xxx <span class="punctuation">&#123;</span></span><br><span class="line">  # 匹配所有以/xxx开头的路径</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">3.</span> 正则匹配</span><br><span class="line">location ~ /xxx <span class="punctuation">&#123;</span></span><br><span class="line">  # 匹配所有以/xxx开头的路径</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">4.</span> 匹配开头路径</span><br><span class="line">location ^~ /images/ <span class="punctuation">&#123;</span></span><br><span class="line">  # 匹配所有以/images开头的路径</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">5.</span> 匹配后缀</span><br><span class="line">location ~* \.(gif|jpg|png)$ <span class="punctuation">&#123;</span></span><br><span class="line">  # 匹配以gif或者jpg或者png为结尾的路径</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">6.</span> 全部通配</span><br><span class="line">location / <span class="punctuation">&#123;</span></span><br><span class="line">  # 匹配全部路径  </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="五、Nginx负载均衡【重点】"><a href="#五、Nginx负载均衡【重点】" class="headerlink" title="五、Nginx负载均衡【重点】"></a>五、Nginx负载均衡【<code>重点</code>】</h3><hr><blockquote><p>Nginx为我们默认提供了三种负载均衡的策略：</p><p>​轮询：将客户端发起的请求，平均的分配给每一台服务器。</p><p>​权重：会将客户端的请求，根据服务器的权重值不同，分配不同的数量。</p><p>​ip_hash：基于当前发起请求的客户端的ip地址，如果ip地址不变，始终会将请求发送到当前的服务器上。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071025043.png"></p><h4 id="5-1-轮询"><a href="#5-1-轮询" class="headerlink" title="5.1 轮询"></a>5.1 轮询</h4><blockquote><p>想实现Nginx轮询负载均衡机制需要修改default.conf配置文件中的内容：</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream 名字 <span class="punctuation">&#123;</span></span><br><span class="line">  server ip<span class="punctuation">:</span>port;</span><br><span class="line">  server ip<span class="punctuation">:</span>port;</span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">server <span class="punctuation">&#123;</span></span><br><span class="line">  listen <span class="number">80</span>;</span><br><span class="line">  listen  <span class="punctuation">[</span><span class="punctuation">:</span><span class="punctuation">:</span><span class="punctuation">]</span><span class="punctuation">:</span><span class="number">80</span>;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  </span><br><span class="line">  location / <span class="punctuation">&#123;</span></span><br><span class="line">    proxy_pass http<span class="punctuation">:</span><span class="comment">//upstream的名字/;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>例如：（注意：upstream的名字不要使用下划线）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream my-server &#123;</span><br><span class="line">  server <span class="number">47.100</span><span class="number">.241</span><span class="number">.89</span>:<span class="number">8081</span>;</span><br><span class="line">  server <span class="number">47.100</span><span class="number">.241</span><span class="number">.89</span>:<span class="number">8082</span>;</span><br><span class="line">  server <span class="number">47.100</span><span class="number">.241</span><span class="number">.89</span>:<span class="number">8083</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen <span class="number">80</span>;</span><br><span class="line">  listen  [::]:<span class="number">80</span>;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http:<span class="comment">//my-server/;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@192 opt]<span class="comment"># cd docker_nginx/</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># ls</span></span><br><span class="line">conf.d  docker-compose.yml</span><br><span class="line">[root@192 docker_nginx]<span class="comment"># cd conf.d/</span></span><br><span class="line">[root@192 conf.d]<span class="comment"># ls</span></span><br><span class="line">default.conf</span><br><span class="line">[root@192 conf.d]<span class="comment"># vim default.conf </span></span><br><span class="line">[root@192 conf.d]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose restart</span></span><br><span class="line">Restarting nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>注：若轮询无法实现，把nginx.conf核心配置文件中的 keepalive_timeout  65 改为 keepalive_timeout  0 即可！</p></blockquote><h4 id="5-2-权重"><a href="#5-2-权重" class="headerlink" title="5.2 权重"></a>5.2 权重</h4><blockquote><p>实现权重的方式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream 名字 <span class="punctuation">&#123;</span></span><br><span class="line">  server ip<span class="punctuation">:</span>port weight=权重比例;</span><br><span class="line">  server ip<span class="punctuation">:</span>port weight=权重比例;</span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">server <span class="punctuation">&#123;</span></span><br><span class="line">  listen <span class="number">80</span>;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  </span><br><span class="line">  location / <span class="punctuation">&#123;</span></span><br><span class="line">    proxy_pass http<span class="punctuation">:</span><span class="comment">//upstream的名字/;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>例如：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream my-server &#123;</span><br><span class="line">  server 47.100.241.89:8081 weight=10;</span><br><span class="line">  server 47.100.241.89:8082 weight=5;</span><br><span class="line">  server 47.100.241.89:80 weight=1;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen  [::]:80;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://my-server/;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@192 docker_nginx]<span class="comment"># cd conf.d/</span></span><br><span class="line">[root@192 conf.d]<span class="comment"># ls</span></span><br><span class="line">default.conf</span><br><span class="line">[root@192 conf.d]<span class="comment"># vim default.conf </span></span><br><span class="line">[root@192 conf.d]<span class="comment"># cd ..</span></span><br><span class="line">[root@192 docker_nginx]<span class="comment"># docker-compose restart</span></span><br><span class="line">Restarting nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="5-3-ip-hash"><a href="#5-3-ip-hash" class="headerlink" title="5.3 ip_hash"></a>5.3 ip_hash</h4><blockquote><p>ip_hash实现，只需要添加一个  ip_hash 配置即可，在暂时不使用的服务器后面添加down即可</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream 名字 &#123;</span><br><span class="line">  ip_hash; <span class="comment"># 配置ip_hash</span></span><br><span class="line">  server ip:port down;</span><br><span class="line">  server ip:port;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://upstream的名字/;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>例如：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">upstream my-server &#123;</span><br><span class="line">  ip_hash;</span><br><span class="line">  server 192.168.25.140:8081;</span><br><span class="line">  server 192.168.25.140:8082 down;</span><br><span class="line">  server 192.168.25.140:8083 down;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen  [::]:80;</span><br><span class="line">  server_name localhost;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://my-server/;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六、Nginx动静分离【重点】"><a href="#六、Nginx动静分离【重点】" class="headerlink" title="六、Nginx动静分离【重点】"></a>六、Nginx动静分离【<code>重点</code>】</h3><hr><blockquote><p>Nginx的并发能力公式：</p><p>worker_processes * worker_connections &#x2F; 4 | 2 &#x3D; Nginx最终的并发能力</p><p>动态资源需要&#x2F;4，静态资源需要&#x2F;2.</p><p>Nginx通过动静分离，来提升Nginx的并发能力，更快的给用户响应。</p></blockquote><h4 id="6-1-动态资源代理"><a href="#6-1-动态资源代理" class="headerlink" title="6.1 动态资源代理"></a>6.1 动态资源代理</h4><blockquote><p>使用proxy_pass动态代理</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置如下</span></span><br><span class="line">location / &#123;</span><br><span class="line">  proxy_pass 路径;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-2-静态资源代理"><a href="#6-2-静态资源代理" class="headerlink" title="6.2 静态资源代理"></a>6.2 静态资源代理</h4><blockquote><p>使用root静态代理</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置如下</span></span><br><span class="line">location / &#123;</span><br><span class="line">  root 静态资源路径;</span><br><span class="line">  index 默认访问路径下的什么资源;</span><br><span class="line">  autoindex on; <span class="comment"># 代表展示静态资源全的全部内容，以列表的形式展开。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先修改docker，添加一个数据卷，映射到Nginx服务器的一个目录</span></span><br><span class="line"><span class="comment"># 添加了index.html和1.jpg静态资源</span></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost docker_nginx]<span class="comment"># ls</span></span><br><span class="line">conf.d  docker-compose.yml</span><br><span class="line">[root@localhost docker_nginx]<span class="comment"># vim docker-compose.yml </span></span><br></pre></td></tr></table></figure><blockquote><p>修改docker-compose.yml为如下内容：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    restart: always</span><br><span class="line">    image: daocloud.io/library/nginx:latest</span><br><span class="line">    container_name: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/docker_nginx/conf.d/:/etc/nginx/conf.d</span><br><span class="line">      - /opt/docker_nginx/img/:/data/img</span><br><span class="line">      - /opt/docker_nginx/html/:/data/html</span><br></pre></td></tr></table></figure><blockquote><p>重启再查看，目录已经创建</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost docker_nginx]<span class="comment"># docker-compose down</span></span><br><span class="line">Stopping nginx ... <span class="keyword">done</span></span><br><span class="line">Removing nginx ... <span class="keyword">done</span></span><br><span class="line">Removing network docker_nginx_default</span><br><span class="line">[root@localhost docker_nginx]<span class="comment"># docker-compose up -d</span></span><br><span class="line">Creating network <span class="string">&quot;docker_nginx_default&quot;</span> with the default driver</span><br><span class="line">Creating nginx ... <span class="keyword">done</span></span><br><span class="line">[root@localhost docker_nginx]<span class="comment"># ls</span></span><br><span class="line">conf.d  docker-compose.yml  html  img</span><br></pre></td></tr></table></figure><blockquote><p>分别在 html 以及 img 目录中拷贝对应的 html 页面和图片即可，然后修改 Nginx 的 default.conf 配置文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen  [::]:80;</span><br><span class="line">  server_name localhost;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代理到html的静态资源</span></span><br><span class="line">  location /html &#123;</span><br><span class="line">    root /data;   <span class="comment">#由于location后面写的是/html，所以root后的路径就不用写成/data/html，/html会默认放在/data后面</span></span><br><span class="line">    index student.html;<span class="comment">#默认访问student.html</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代理到img的静态资源</span></span><br><span class="line">  location /img &#123;</span><br><span class="line">    root /data;</span><br><span class="line">    autoindex on;<span class="comment">#以列表的形式展开</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost docker_nginx]<span class="comment"># cd conf.d/</span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># vim default.conf </span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># cd ..</span></span><br><span class="line">[root@localhost docker_nginx]<span class="comment"># docker-compose restart</span></span><br><span class="line">Restarting nginx ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>浏览器分别访问以下地址进行测试：</p><p>​<a href="http://39.98.132.196/html/">http://39.98.132.196/html/</a> （查看之前拷贝的student.html页面）</p><p>​<a href="http://39.98.132.196/img/2.jpg">http://39.98.132.196/img/2.jpg</a> （注：2.jpg是拷贝的图片名称）</p><p>​<a href="http://39.98.132.196/img/">http://39.98.132.196/img/</a> （注：可以看到当前目录下的所有文件）</p></blockquote><h3 id="七、Nginx集群"><a href="#七、Nginx集群" class="headerlink" title="七、Nginx集群"></a>七、Nginx集群</h3><hr><blockquote><p>单点故障，避免nginx的宕机，导致整个程序的崩溃</p><p>准备多台Nginx。</p><p>准备keepalived，监听nginx的健康情况。</p><p>准备haproxy，提供一个虚拟的路径，统一的去接收用户得请求。</p></blockquote><table><thead><tr><th align="center">Nginx集群</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071025764.png" alt="1588755548570"></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;hr&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;一、引言&quot;&gt;&lt;a href=&quot;#一、引言&quot; class=&quot;headerlink&quot; title=&quot;一、引言&quot;&gt;&lt;/a&gt;一、引言&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;1-1-代理问题&quot;&gt;&lt;a href=&quot;#1-1-代理问题&quot; class=&quot;headerlink&quot; title=&quot;1.1 代理问题&quot;&gt;&lt;/a&gt;1.1 代理问题&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;客户端到底要将请求发送给哪台服务器。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="后端学习" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="java" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/java/"/>
    
    
    <category term="Nginx" scheme="http://example.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>关于Windows一些常用Command</title>
    <link href="http://example.com/2023/03/29/%E5%85%B3%E4%BA%8EWindows%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8Command/"/>
    <id>http://example.com/2023/03/29/%E5%85%B3%E4%BA%8EWindows%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8Command/</id>
    <published>2023-03-29T09:58:50.000Z</published>
    <updated>2023-03-30T12:42:26.322Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关机、重启、注销、休眠、定时"><a href="#关机、重启、注销、休眠、定时" class="headerlink" title="关机、重启、注销、休眠、定时"></a>关机、重启、注销、休眠、定时</h3><ul><li>关机：<code>shutdown /s</code></li><li>重启：<code>shutdown /r</code></li><li>注销：<code>shutdown /l</code></li><li>休眠：<code>shutdown /h /f</code></li><li>取消关机：<code>shutdown /a</code></li><li>定时关机：<code>shutdown /s /t 3600</code>（3600 秒后关机）<span id="more"></span></li></ul><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><p><strong>切换目录，进入指定文件夹：</strong></p><ul><li>切换磁盘：<code>d:</code>（进入 d 盘）</li><li>切换磁盘和目录：<code>cd /d d:/test</code>（进入 <code>d</code> 盘 <code>test</code> 文件夹）</li><li>进入文件夹：<code>cd \test1\test2</code>（进入 <code>test2</code> 文件夹）</li><li>返回根目录：<code>cd \</code></li><li>回到上级目录：<code>cd ..</code></li><li>新建文件夹：<code>md test</code></li></ul><p><strong>显示目录内容：</strong></p><ul><li>显示目录中文件列表：<code>dir</code></li><li>显示目录结构：<code>tree d:\test</code>（d 盘 test 目录）</li><li>显示当前目录位置：<code>cd</code></li><li>显示指定磁盘的当前目录位置：<code>cd d:</code></li></ul><h3 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a><strong>网络操作</strong></h3><ul><li>延迟和丢包率：<code>ping ip/域名</code></li><li>Ping 测试 5 次：<code>ping ip/域名 -n 5</code></li><li>清除本地 DNS 缓存：<code>ipconfig /flushdns</code></li><li>路由追踪：<code>tracert ip/域名</code></li></ul><h3 id="进程-x2F-服务操作"><a href="#进程-x2F-服务操作" class="headerlink" title="进程&#x2F;服务操作"></a><strong>进程&#x2F;服务操作</strong></h3><p><strong>进程管理：</strong></p><ul><li>显示当前正在运行的进程：<code>tasklist</code></li><li>运行程序或命令：<code>start 程序名</code></li><li>结束进程，按名称：<code>taskkill /im notepad.exe</code>（关闭记事本）</li><li>结束进程，按 PID：<code>taskkill /pid 1234</code>（关闭 PID 为 1234 的进程）</li></ul><p><strong>服务管理：</strong></p><ul><li>显示当前正在运行的服务：<code>net start</code></li><li>启动指定服务：<code>net start 服务名</code></li><li>停止指定服务：<code>net stop 服务名</code></li></ul><h3 id="保存为-bat-可执行文件"><a href="#保存为-bat-可执行文件" class="headerlink" title="保存为 .bat 可执行文件"></a>保存为 .bat 可执行文件</h3><p>我们可以将常用的命令输入记事本中，并保存为后缀为 <code>.bat</code> 的可执行文件。</p><p>以后只要双击该文件即可执行指定命令；将文件放入系统【启动】目录中，可以实现开机自动运行。</p><h3 id="使用的案例"><a href="#使用的案例" class="headerlink" title="使用的案例"></a>使用的案例</h3><p><strong>使用示例 1：</strong></p><p>在资源管理器卡死时，我们可以使用 <code>taskkill</code> 命令重启。将下面命令保存为 <code>ReExplorer.bat</code>，在需要时双击即可强制重启资源管理器。或直接打开 CMD 运行命令也可以。</p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01taskkill /f /im explorer.exe &amp; start explorer.exe</span><br></pre></td></tr></table></figure><p><strong>使用示例 2：</strong></p><p>迅雷会在后台自动运行 <code>ThunderPlatform.exe</code> 进程和 <code>XLServicePlatform</code> 服务，如果当前没有使用迅雷的话显然没必要。</p><p>我们可以将如下代码保存为 <code>killxl.bat</code>，并放入【启动】目录，开机后会自动运行该脚本，清除这两个进程。</p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0102net stop XLServicePlatform</span><br><span class="line">taskkill /F /im ThunderPlatform.exe</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;关机、重启、注销、休眠、定时&quot;&gt;&lt;a href=&quot;#关机、重启、注销、休眠、定时&quot; class=&quot;headerlink&quot; title=&quot;关机、重启、注销、休眠、定时&quot;&gt;&lt;/a&gt;关机、重启、注销、休眠、定时&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;关机：&lt;code&gt;shutdown /s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启：&lt;code&gt;shutdown /r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注销：&lt;code&gt;shutdown /l&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;休眠：&lt;code&gt;shutdown /h /f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;取消关机：&lt;code&gt;shutdown /a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;定时关机：&lt;code&gt;shutdown /s /t 3600&lt;/code&gt;（3600 秒后关机）</summary>
    
    
    
    <category term="Windows" scheme="http://example.com/categories/Windows/"/>
    
    
    <category term="Windows Command" scheme="http://example.com/tags/Windows-Command/"/>
    
  </entry>
  
  <entry>
    <title>关于Rider引入nuget无法加载包依赖解方式</title>
    <link href="http://example.com/2022/11/22/%E5%85%B3%E4%BA%8ERider%E5%BC%95%E5%85%A5nuget%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E5%8C%85%E4%BE%9D%E8%B5%96%E8%A7%A3%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2022/11/22/%E5%85%B3%E4%BA%8ERider%E5%BC%95%E5%85%A5nuget%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E5%8C%85%E4%BE%9D%E8%B5%96%E8%A7%A3%E6%96%B9%E5%BC%8F/</id>
    <published>2022-11-22T12:09:29.000Z</published>
    <updated>2023-04-01T00:31:40.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这个问题已经是困扰我三天了，因为<code>C#</code>使用<code>ride</code>r开发的人相对较少，也可能是我自身遇到这个问题比较特殊，终于找到了<code>nuget</code>无法引入包的解决方案</p></blockquote><span id="more"></span><p>首先看图：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211220823203.png" alt="image-20221122082335814"></p><p>我在<code>Nuget</code>下面查找<code>Nunit</code>测试包下面都没有加载出来，其他的包也是加载不出来，下面一直显示的包重置，但是我是默认下载下来的，什么也没有修改，然后我就点开了<code>nuget.config</code>这个配置文件</p><p>图中也有，我在网上也没有找到相关的配置说明，当时也没有想到去微软官网去看，因为官网讲的基本都是关于VS的配置。</p><p>在默认配置中：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211220828462.png" alt="image-20221122082848339"></p><p>source中默认的feeds连接都是空的，问题就是出在我上面标注出来的包的下载地址。</p><p>给下面从微软官方找到的配置地址，复制到<code>nuget.config</code>配置文件中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- defaultPushSource key works like the &#x27;defaultPushSource&#x27; key of NuGet.Config files. --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- This can be used by administrators to prevent accidental publishing of packages to nuget.org. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">&quot;defaultPushSource&quot;</span> <span class="attr">value</span>=<span class="string">&quot;https://contoso.com/packages/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Default Package Sources; works like the &#x27;packageSources&#x27; section of NuGet.Config files. --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- This collection cannot be deleted or modified but can be disabled/enabled by users. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packageSources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">&quot;Contoso Package Source&quot;</span> <span class="attr">value</span>=<span class="string">&quot;https://contoso.com/packages/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">&quot;nuget.org&quot;</span> <span class="attr">value</span>=<span class="string">&quot;https://api.nuget.org/v3/index.json&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">packageSources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Default Package Sources that are disabled by default. --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Works like the &#x27;disabledPackageSources&#x27; section of NuGet.Config files. --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Sources cannot be modified or deleted either but can be enabled/disabled by users. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">disabledPackageSources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">&quot;nuget.org&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">disabledPackageSources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要给这些enable都勾选上</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211220833403.png" alt="image-20221122083314091"></p><p>然后右边的刷新按钮点一下，或者去到设置里面找到</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211220834175.png" alt="image-20221122083437031"></p><p>这时候代表已经添加成功。</p><p>回到<code>nuget</code>以后,<code>packages</code>搜索框这时候已经加载出来包了，下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211220836706.png" alt="image-20221122083626412"></p><p>这时候说明已经成功！！！</p><blockquote><p>本次版本是<code>.net6,rider版本是2021.3.4</code>，最新版2022版本应该也是可以这样修改，如果能直接加载出来就更好，无法加载可以尝试修改~</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这个问题已经是困扰我三天了，因为&lt;code&gt;C#&lt;/code&gt;使用&lt;code&gt;ride&lt;/code&gt;r开发的人相对较少，也可能是我自身遇到这个问题比较特殊，终于找到了&lt;code&gt;nuget&lt;/code&gt;无法引入包的解决方案&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    <category term="后端学习" scheme="http://example.com/categories/C/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="C#" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>服务器（一）</title>
    <link href="http://example.com/2022/10/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2022/10/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-10-07T03:57:52.000Z</published>
    <updated>2023-04-01T09:19:04.758Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-服务器的概述"><a href="#1-服务器的概述" class="headerlink" title="1.服务器的概述"></a>1.服务器的概述</h3><h4 id="1-什么是服务器"><a href="#1-什么是服务器" class="headerlink" title="1.什么是服务器"></a>1.什么是服务器</h4><blockquote><p>服务器是计算机的一种，它比普通计算机运行更快、负载更高、价格更贵。服务器在网络中为其它客户机（如PC机、智能手机、ATM等终端甚至是火车系统等大型设备）提供计算或者应用服务。服务器具有高速的CPU运算能力、长时间的可靠运行、强大的V&#x2F;O外部数据吞吐能力以及更好的扩展性。根据服务器所提供的服务，一般来说服务器都具备承担响应服务请求、承担服务、保障服务的能力。服务器作为电子设备，其内部的结构十分的复杂，但与普通的计算机内部结构相差不大，如：cpu、硬盘、内存，系统、系统总线等。</p></blockquote><span id="more"></span><h3 id="2-服务器的作用"><a href="#2-服务器的作用" class="headerlink" title="2.服务器的作用"></a>2.服务器的作用</h3><blockquote><p>通俗的说，服务器主要是用来响应终端的服务请求：并进行处理，我们在上网的时候是不可能直接将网客接人互联网的，我们都需要通过服务器米连接网络，真有服务器响应你的联网请求，并且进行处理以后才可以联网：存储的功能，服务器的存储空间一般比较充足，可以存储非常多的信息。</p></blockquote><h3 id="3-服务器的分类"><a href="#3-服务器的分类" class="headerlink" title="3.服务器的分类"></a>3.服务器的分类</h3><h5 id="3-1-按物理形态："><a href="#3-1-按物理形态：" class="headerlink" title="3.1 按物理形态："></a>3.1 <strong>按物理形态：</strong></h5><p><strong>服务器：</strong>服务器可以理解为放在远程机房的独立计算机，和我们所用的台式机（没有显示器、键微、鼠标）除了外观和配置外，功能上没有差异，你可以通过远程控制自己安装系统及其他软件，同时可以解析和绑定城名，并通过城名或<code>IP</code>访问服务器上的网站。</p><p><strong>ECS服务器：</strong>云服务器<code>(Elastic Compute Service)</code>，通常用户可以根据自己的需要选定主机容量、<code>CPU</code>能力、内存大小、带宽及购买时常等，因此也称之为弹性计算服务器，<code>ECS</code>在使用上和独立的服务器没有区别，且可以让企业节省自行购买和维护服务器硬件的成本，<code>ECS</code>已被中小企业广泛使用。</p><p><strong>VPS服务器：</strong>虚拟专用服务器<code>(Virtual Private Server)</code>，即将一台独立服务器迎过虚拟技术分割为若干个處拟服务器，每个<code>VPS</code>可以独立安装系统，拥有独立的<code>IP</code>，实现不同<code>VPS</code>间磁盘空问、内存、<code>CPU</code>资源、进程和系统配置的隔商，为用户和应用程序模拟出“独占”使用计算资源的体验。<code>VPS</code>可以像独立服务器一样，重装操作系统，安裝程序，单独重启服务器，形式上和<code>ECS</code>没有区別，但总体性能和付费灵活性不如<code>ECS</code></p><p><strong>虚拟主机：</strong>即将一台己安装樣作系统和安全防范的服务器通过技术手段分制为若千个独立的空间，分配给用户独立使用，用户只需要上传网站程序，解析和绑定域名即可使用。虚拟主机不同于服务器，用户无法安装操作系统和操作软件，只能运行网站脚本语言、<code>html</code>文件、图片及其他静态文件等。虚拟主机相当于着干个用户一起租用一台服务器，价格实惠，简单易用，因此大多数企业网站选择了虚拟主机，而自助建站及云建站使用的也是虚拟主机。</p><h5 id="3-2-按物理位置："><a href="#3-2-按物理位置：" class="headerlink" title="3.2 按物理位置："></a>3.2 按物理位置：</h5><p><strong>国内主机</strong><br><strong>国外主机（美国、德国等地区的主机）</strong><br>1、备案方而：国内主机必须备案因外主机不需要提交备案资料的。<br>2、访问速度：国内主机国内访问快，海外主机海外访问快。<br>3、线路：国内主机有线路限制，海外主机没有，因内主机线路以联通和电信为主，相同的线路访问不存在速度限制，但相互访问就有点问题了</p><h3 id="4-服务器的关键参数指标"><a href="#4-服务器的关键参数指标" class="headerlink" title="4.服务器的关键参数指标"></a>4.服务器的关键参数指标</h3><h5 id="4-1-操作系统："><a href="#4-1-操作系统：" class="headerlink" title="4.1 操作系统："></a>4.1 操作系统：</h5><p><strong>Windows Server：</strong><br>重要版本<code>Windows NT Server 4.0</code>、 <code>Windows 2000 Server</code>、 <code>Windows Server 2003</code>、 <code>Windows Server 2003 R2</code>、<code>Windows Server 2008</code> 、 <code>Windows Server 2008 R2 </code>、 <code>Windows Server 2012</code>。<code> Windows</code>服务器操作系统派应用，结<br>合<code>.NET</code>开发环境，为微软企业用户提供了良好的应用框架。<br><strong>Netware：</strong><br>在一些特定行业和事业单位中，NetWare优秀的批处理功能和安全、稳定的系统性能也有很大的生存空间。NetWare常<br>用的版本有<code>Novell</code>的<code>3.11</code>、 <code>3.12</code>、 <code>4.10</code>、<code>5.0</code>等中英文版。<br><strong>Unix：</strong><br><code>Unix</code>服务器操作系统由<code>AT&amp;T</code>公司和<code>SCO</code>公司共同推出，主要支持大型的文件系统服务、数据服务等应用。市面上流传的<br>主要有<code>SCO SVR</code>、<code> BSD Unix</code>、 <code>SUN Solaris</code>、 <code>IBM-AIX</code>、 <code>HP-U</code>、 <code>FreeBSDX</code>。<br><strong>Linux：</strong><br><code>Linux</code>操作系统虽然与<code>UNIX</code>操作系统类似，但是它不是<code>UNIX</code>操作系统的变种。<code>Torvald</code>从开始编写内核代码时就仿效<code>UNIX</code>，<br>几乎所有<code>UNIX</code>的工具与外壳都可以运行在<code>LINUX</code>上。(linux系统相比windows更安全，运行效率更高）</p><h5 id="4-2-支持脚本："><a href="#4-2-支持脚本：" class="headerlink" title="4.2 支持脚本："></a>4.2 支持脚本：</h5><p>即是否网站程序常见的开发语言，主要有<code>asp</code>及<code>.net</code>、<code> php</code>、<code> jsp</code>, -般需要根据网站程序所使用的开发语言选择，支持的开发语言越少主机越安全和高效</p><h5 id="4-3-空间容量："><a href="#4-3-空间容量：" class="headerlink" title="4.3 空间容量："></a><strong>4.3 空间容量：</strong></h5><p>存放文件的空间大小，企业网站一般可以根据图片和视频文件大小来选择，以及主机使用的年限，一般1-5G就够用了</p><h5 id="4-4主机带宽："><a href="#4-4主机带宽：" class="headerlink" title="4.4主机带宽："></a><strong>4.4主机带宽：</strong></h5><p>主机支持的最大下行访问速度，即直接影响网站访问速度，但虚拟主机并不是带宽越大访问就会越快，还需要考虑同一台服务器上有多少个网站和其他网站是否会消耗带宽资源。</p><h5 id="4-5-访问流量："><a href="#4-5-访问流量：" class="headerlink" title="4.5 访问流量："></a>4.5 访问流量：</h5><p>当一台服务器分割的虚拟主机超过一定数量（如100，很多主机商一台服务器放置了数百个虚拟主机）时，为了限制因某个虚拟主机的网站大量消耗访问带宽（流量）资源，主机提供商不得不在成本和大多数用户的访问速度中找一个平衡点，所以就使用了限制访问流量这个指标。而对于用户来说，当然是不限制流量才没有后顾之忧。</p><h5 id="4-6-并发量："><a href="#4-6-并发量：" class="headerlink" title="4.6 并发量："></a>4.6 并发量：</h5><p>即同一时刻请求访问网站的用户数量，虚拟主机提供商为尽可能保障每个虚拟主机用户的网站稳定和公平性，不得己设置了并发量参数，从而可以在一定程度上确保一台服务器上的其他虚拟主机能稳定的访问。对于小型网站来说，同一时刻在线并动态请求的用户数量并不会太大，因此一般的用户感觉不出来自己的网站访问受限。</p><h5 id="4-7-CPU和内存："><a href="#4-7-CPU和内存：" class="headerlink" title="4.7 CPU和内存："></a>4.7 CPU和内存：</h5><p>和普通电脑一样，代表服务器的运行计算能力，也就是对网站程序的响应速度和效率，如果在不考虑成本的情况下，当然是CPU多核、内存越大性能越高，但企业网站的数据量是有限的，一般双核、4G就可以满足基本使用。</p><h5 id="4-8-服务器ip类型：独立ip和共享ip："><a href="#4-8-服务器ip类型：独立ip和共享ip：" class="headerlink" title="4.8 服务器ip类型：独立ip和共享ip："></a>4.8 服务器ip类型：独立ip和共享ip：</h5><p>首先，两者的概念不一样，独立<code>IP</code>是指一个服务器拥有自己独立的<code>IP</code>地址，共享<code>IP</code>是指多个服务器共用一个公网IP地址，<br>群英把两者的优缺点简单概述如下几点：<br>1.价格方面：共享<code>IP</code>要比独立<code>IP</code>便宜.<br>2.风险问题：共享<code>IP</code>易受到外来网络攻击，且其中一个网站出现问题就会波及其他站点，而独立<code>IP</code>就不会受到这种连带的<br>波及问题.<br>3.收永影响：独立<code>IP</code>更有利于被搜素引擎收录，权重更高.<br>4.城名绑定区别：独立<code>IP</code>可以实现泛域名绑定，而共享<code>IP</code>无法实现泛域名绑定.<br>5.能香直接使用<code>IP</code>访问：独立IP可以直接使用<code>IP</code>访问，共享<code>IP</code>不能，若访问就会收到报错的提示。</p><h5 id="4-9-扩展性能："><a href="#4-9-扩展性能：" class="headerlink" title="4.9 扩展性能："></a>4.9 扩展性能：</h5><p>支持语言，是否支持伪静态、字体</p><h3 id="5-管理服务器"><a href="#5-管理服务器" class="headerlink" title="5. 管理服务器"></a>5. 管理服务器</h3><h5 id="5-1-FTP是什么？"><a href="#5-1-FTP是什么？" class="headerlink" title="5.1 FTP是什么？"></a>5.1 <strong>FTP是什么？</strong></h5><blockquote><p><code>FTP</code> <code>(File Transfer Protocol</code>，文件传输协议）是 <code>TCPAP</code> 协议组中的协议之一。<code>FTP</code>协议包括两个组成部分，其一为<br><code>FTP</code>服务器，其二为<code>FTP</code>客户端。<br>作用:<br>对于客户端：是为了客户端链接主机来管理自己的主机文件<br>对于主机商：可以用<code>FTP</code>可以用来实现限制不同虚拟主机分配给用户对服务器的管理权限</p></blockquote><h5 id="5-2-FTP链接模式："><a href="#5-2-FTP链接模式：" class="headerlink" title="5.2 FTP链接模式："></a>5.2 FTP链接模式：</h5><p>主动模式（<code>port</code>模式）<br>客户端发送控制链接到服务器的<code>FTP</code>墙口，一般是默认设置为<code>21</code>，然后服务器的数据端口主动去连接用户的客户蠲<code>n+1</code>的数据端口<br>被动模式（ <code>passive</code>模式）<br>客户端发送控制链接到服务器的<code>FTP</code>端口，一般是默认设置为<code>21</code>，客服躅的数据端口<code>n+1</code>端口，主动链接的服务器的数据<code>20</code>端口</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-服务器的概述&quot;&gt;&lt;a href=&quot;#1-服务器的概述&quot; class=&quot;headerlink&quot; title=&quot;1.服务器的概述&quot;&gt;&lt;/a&gt;1.服务器的概述&lt;/h3&gt;&lt;h4 id=&quot;1-什么是服务器&quot;&gt;&lt;a href=&quot;#1-什么是服务器&quot; class=&quot;headerlink&quot; title=&quot;1.什么是服务器&quot;&gt;&lt;/a&gt;1.什么是服务器&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;服务器是计算机的一种，它比普通计算机运行更快、负载更高、价格更贵。服务器在网络中为其它客户机（如PC机、智能手机、ATM等终端甚至是火车系统等大型设备）提供计算或者应用服务。服务器具有高速的CPU运算能力、长时间的可靠运行、强大的V&amp;#x2F;O外部数据吞吐能力以及更好的扩展性。根据服务器所提供的服务，一般来说服务器都具备承担响应服务请求、承担服务、保障服务的能力。服务器作为电子设备，其内部的结构十分的复杂，但与普通的计算机内部结构相差不大，如：cpu、硬盘、内存，系统、系统总线等。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="运维" scheme="http://example.com/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>C# windows 环境搭建</title>
    <link href="http://example.com/2022/10/02/C-windows-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/10/02/C-windows-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2022-10-02T07:07:06.000Z</published>
    <updated>2023-04-01T02:55:06.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注：本次学习开发使用的软件<code>jetbrians Rider</code></p></blockquote><h3 id="C-语言，其实也叫做-net语言，所有我们准备必要的开发环境，下载链接-https-dotnet-microsoft-com-zh-cn-download"><a href="#C-语言，其实也叫做-net语言，所有我们准备必要的开发环境，下载链接-https-dotnet-microsoft-com-zh-cn-download" class="headerlink" title="C# 语言，其实也叫做.net语言，所有我们准备必要的开发环境，下载链接: https://dotnet.microsoft.com/zh-cn/download"></a>C# 语言，其实也叫做.net语言，所有我们准备必要的开发环境，下载链接: <a href="https://dotnet.microsoft.com/zh-cn/download">https://dotnet.microsoft.com/zh-cn/download</a></h3><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211120647988.png" alt="image-20221112064702881"></p><h3 id="上面两者软件都可以，更推荐长期版本，兼容性比较好。"><a href="#上面两者软件都可以，更推荐长期版本，兼容性比较好。" class="headerlink" title="上面两者软件都可以，更推荐长期版本，兼容性比较好。"></a>上面两者软件都可以，更推荐长期版本，兼容性比较好。</h3><h3 id="下载完成以后双击安装即可："><a href="#下载完成以后双击安装即可：" class="headerlink" title="下载完成以后双击安装即可："></a>下载完成以后双击安装即可：</h3><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211120649963.png" alt="image-20221112064939901"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211120648869.png" alt="image-20221112064846821"></p><h3 id="当进度条走完时，代表已经安装成功。"><a href="#当进度条走完时，代表已经安装成功。" class="headerlink" title="当进度条走完时，代表已经安装成功。"></a>当进度条走完时，代表已经安装成功。</h3><p>安装成功</p><h3 id="验证自己有没有安装成功，在cmd中，输入命令"><a href="#验证自己有没有安装成功，在cmd中，输入命令" class="headerlink" title="验证自己有没有安装成功，在cmd中，输入命令"></a>验证自己有没有安装成功，在<code>cmd</code>中，输入命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --list-sdks</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211120809434.png" alt="image-20221112080948275"></p><h3 id="出现这个即代表安装成功，环境搭建完成。"><a href="#出现这个即代表安装成功，环境搭建完成。" class="headerlink" title="出现这个即代表安装成功，环境搭建完成。"></a>出现这个即代表安装成功，环境搭建完成。</h3><p><strong>然后安装 <code>Jerbetbrians Rider</code></strong></p><p><strong>官网下载：</strong><a href="https://www.jetbrains.com/rider/">https://www.jetbrains.com/rider/</a></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211120814198.png" alt="image-20221112081423053"></p><p><strong>下载以后双击：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211131101754.png" alt="image-20221113110130585"></p><p><strong>当出现这个界面的时候，即软件代表安装成功！</strong></p><p><strong>然后就是新建项目</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211131104971.png" alt="image-20221113110407910"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211131104951.png" alt="image-20221113110443839"></p><p><strong>运行：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211131106148.png" alt="image-20221113110613050"></p><p><strong>运行结果<code>Hello, World！</code></strong></p><p><strong>环境搭建结束</strong></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注：本次学习开发使用的软件&lt;code&gt;jetbrians Rider&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;C-语言，其实也叫做-net语言，所有我们准备必要的开发环境，下载链接-https-dotnet-microsoft-com-zh-cn-download&quot;&gt;&lt;a href=&quot;#C-语言，其实也叫做-net语言，所有我们准备必要的开发环境，下载链接-https-dotnet-microsoft-com-zh-cn-download&quot; class=&quot;headerlink&quot; title=&quot;C# 语言，其实也叫做.net语言，所有我们准备必要的开发环境，下载链接: https://dotnet.microsoft.com/zh-cn/download&quot;&gt;&lt;/a&gt;C# 语言，其实也叫做.net语言，所有我们准备必要的开发环境，下载链接: &lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/download&quot;&gt;https://dotnet.microsoft.com/zh-cn/download&lt;/a&gt;&lt;/h3&gt;</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="C#" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="http://example.com/2022/07/05/Redis/"/>
    <id>http://example.com/2022/07/05/Redis/</id>
    <published>2022-07-05T00:02:39.000Z</published>
    <updated>2023-04-01T01:27:12.072Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238373.jfif" alt="1586740065742"></p><span id="more"></span><p>[TOC]</p><h3 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h3><hr><h4 id="1-1-数据库压力过大"><a href="#1-1-数据库压力过大" class="headerlink" title="1.1 数据库压力过大"></a>1.1 数据库压力过大</h4><blockquote><p>由于用户量增大，请求数量也随之增大，数据压力过大</p></blockquote><h4 id="1-2-数据不同步"><a href="#1-2-数据不同步" class="headerlink" title="1.2 数据不同步"></a>1.2 数据不同步</h4><blockquote><p>多台服务器之间，数据不同步</p></blockquote><h4 id="1-3-传统锁失效"><a href="#1-3-传统锁失效" class="headerlink" title="1.3 传统锁失效"></a>1.3 传统锁失效</h4><blockquote><p>多台服务器之间的锁，已经不存在互斥性了。</p></blockquote><h3 id="二、Redis介绍"><a href="#二、Redis介绍" class="headerlink" title="二、Redis介绍"></a>二、Redis介绍</h3><hr><h4 id="2-1-关于关系型数据库和NOSQL数据库（键值对存储）"><a href="#2-1-关于关系型数据库和NOSQL数据库（键值对存储）" class="headerlink" title="2.1 关于关系型数据库和NOSQL数据库（键值对存储）"></a>2.1 关于关系型数据库和NOSQL数据库（键值对存储）</h4><blockquote><p>关系型数据库是基于关系表的数据库，最终会将数据持久化到磁盘上，而nosql数据库是基于特殊的结构，并将数据存储到内存的数据库。从性能上而言，nosql数据库要优于关系型数据库，从安全性上而言关系型数据库要优于nosql数据库，所以在实际开发中一个项目中nosql和关系型数据库会一起使用，达到性能和安全性的双保证。</p><p>NOSQL产品: redis，mongodb，memcached…</p></blockquote><blockquote><ul><li>Redis就是一款NoSQL</li><li>NoSQL -&gt; 非关系型数据库 -&gt; Not Only SQL。</li><li>Key-Value：Redis …</li><li>文档型：ElasticSearch，Solr，Mongodb …</li><li>面向列：Hbase，Cassandra …</li><li>图形化：Neo4j …</li><li>除了关系型数据库都是非关系型数据库</li><li>NoSQL只是一种概念，泛指非关系型数据库，和关系型数据库做一个区分</li></ul></blockquote><!--more--><h4 id="2-2-Redis介绍"><a href="#2-2-Redis介绍" class="headerlink" title="2.2 Redis介绍"></a>2.2 Redis介绍</h4><blockquote><ul><li><p>有一位意大利人，在开发一款LLOOGG的统计页面，因为MySQL的性能不好，自己研发了一款非关系型数据库，并命名为Redis。Salvatore。</p></li><li><p>Redis（Remote Dictionary Server）即远程字典服务，Redis是由C语言去编写，Redis是一款基于Key-Value的NoSQL，而且Redis是基于内存存储数据的，Redis还提供了多种持久化机制，性能可以达到110000&#x2F;s读取数据以及81000&#x2F;s写入数据，Redis还提供了主从，哨兵以及集群的搭建方式，可以更方便的横向扩展以及垂直扩展。</p></li></ul></blockquote><table><thead><tr><th align="center">Redis之父</th></tr></thead><tbody><tr><td align="center"><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238413.png" alt="1586747559955"></td></tr></tbody></table><h3 id="三、Redis安装"><a href="#三、Redis安装" class="headerlink" title="三、Redis安装"></a>三、Redis安装</h3><hr><h4 id="3-1-安装Redis"><a href="#3-1-安装Redis" class="headerlink" title="3.1 安装Redis"></a>3.1 安装Redis</h4><blockquote><p>官网：<a href="https://redis.io/">https://redis.io</a></p><p>下载：<a href="http://download.redis.io/releases">http://download.redis.io/releases</a></p><p>中文网：<a href="https://www.redis.net.cn/">https://www.redis.net.cn/</a></p></blockquote><blockquote><p>官网提供安装方式如下：（安装redis编译的c环境，此步骤没有编译）</p><p>Installation</p><p>Download, extract and compile Redis with:</p><p>$ wget &lt;<a href="http://download.redis.io/releases/redis-5.0.5.tar.gz">http://download.redis.io/releases/redis-5.0.5.tar.gz</a> &gt;</p><p>$ tar xzf redis-5.0.5.tar.gz $ cd redis-5.0.5</p><p>$ make</p><p>The binaries that are now compiled are available in the src directory. Run Redis with:</p><p>$ src&#x2F;redis-server</p><p>You can interact with Redis using the built-in client:</p><p>$ src&#x2F;redis-cli</p><p>redis&gt; set foo bar</p><p>OK</p><p>redis&gt; get foo</p><p>“bar”</p></blockquote><h4 id="3-3-安装步骤"><a href="#3-3-安装步骤" class="headerlink" title="3.3 安装步骤"></a>3.3 安装步骤</h4><blockquote><p>1.把下载好的redis-6.2.6.tar.gz安装包拷贝到当前虚拟机root目录下，解压到&#x2F;usr&#x2F;local下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# tar -zxvf redis-6.2.6.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure><p>2.编译的c环境，注：安装时如果显示yum正在运行，需要先将yum进程kill后再执行该命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum install gcc-c++</span><br></pre></td></tr></table></figure><p>3.进入redis-6.2.6目录 使用make命令编译redis（若报错，先make distclean，再make）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-6.2.6]# make</span><br></pre></td></tr></table></figure><p>4.使用make PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;redis-6.2.6 install命令安装（安装后会出现bin目录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-6.2.6]# make PREFIX=/usr/local/redis-6.2.6 install</span><br></pre></td></tr></table></figure><p>5.启动redis服务端（前台启动）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-6.2.6]# cd bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-server </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238861.png"></p><p>启动后看到如上欢迎页面，但此窗口不能关闭，窗口关闭就认为redis也关闭了，所以我们需要在后台启动，然后再启动客户端进行连接，所以首先Ctrl+C退出。</p><p>解决：可以通过修改配置文件配置redis的后台启动（即服务器启动了但不会创建控制台窗口）</p><p>步骤如下：</p><p>1.切换到redis-6.2.6目录下，把当前目录下的redis.conf文件拷贝到bin目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# cd ../</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-6.2.6]# cp redis.conf bin/redis.conf</span><br></pre></td></tr></table></figure><p>2.切换到bin目录下，修改redis.conf文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-6.2.6]# cd bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# vim redis.conf </span><br></pre></td></tr></table></figure><p>3.将redis.conf文件中的daemonize的值从no修改成yes表示后台启动</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238640.png"></p><p>4.启动redis服务端（后台启动）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-server redis.conf</span><br></pre></td></tr></table></figure><p>5.查看是否启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ps -ef | grep redis</span><br></pre></td></tr></table></figure><p>6.启动客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-cli</span><br></pre></td></tr></table></figure><p>7.存取数据进行测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set name jack</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;jack&quot;</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-4-Redis的配置文件"><a href="#3-4-Redis的配置文件" class="headerlink" title="3.4 Redis的配置文件"></a>3.4 Redis的配置文件</h4><table><thead><tr><th>配置项名称</th><th>配置项值范围</th><th>说明</th></tr></thead><tbody><tr><td>daemonize</td><td>yes、no</td><td>yes表示启用守护进程，默认是no即不以守护进程方式运行。其中Windows系统下不支持启用守护进程方式运行</td></tr><tr><td>port</td><td></td><td>指定 Redis 监听端口，默认端口为 6379</td></tr><tr><td>bind</td><td></td><td>绑定的主机地址,如果需要设置远程访问则直接将这个属性备注下或者改为bind * 即可,这个属性和下面的protected-mode控制了是否可以远程访问 。</td></tr><tr><td>protected-mode</td><td>yes 、no</td><td>默认是yes，即开启。设置外部网络连接redis服务，设置方式如下：1、关闭protected-mode模式，此时外部网络可以直接访问2、开启protected-mode保护模式，需配置bind ip或者设置访问密码</td></tr><tr><td>timeout</td><td>300</td><td>当客户端闲置多长时间后关闭连接，如果指定为 0，表示关闭该功能</td></tr><tr><td>loglevel</td><td>debug、verbose、notice、warning</td><td>日志级别，默认为 notice</td></tr><tr><td>databases</td><td>16</td><td>设置数据库的数量，默认的数据库是0。整个通过客户端工具可以看得到</td></tr><tr><td>rdbcompression</td><td>yes、no</td><td>指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大。</td></tr><tr><td>dbfilename</td><td>dump.rdb</td><td>指定本地数据库文件名，默认值为 dump.rdb</td></tr><tr><td>dir</td><td></td><td>指定本地数据库存放目录</td></tr><tr><td>requirepass</td><td></td><td>设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH <password> 命令提供密码，默认关闭</td></tr><tr><td>maxclients</td><td>0</td><td>设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息。</td></tr><tr><td>maxmemory</td><td>XXX <bytes></td><td>指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区。配置项值范围列里XXX为数值。</td></tr></tbody></table><h3 id="四、redis-benchmark官方自带的性能测试工具"><a href="#四、redis-benchmark官方自带的性能测试工具" class="headerlink" title="四、redis-benchmark官方自带的性能测试工具"></a>四、redis-benchmark官方自带的性能测试工具</h3><hr><h4 id="4-1-在安装的redis中可以看到redis-benchmark"><a href="#4-1-在安装的redis中可以看到redis-benchmark" class="headerlink" title="4.1 在安装的redis中可以看到redis-benchmark"></a>4.1 在安装的redis中可以看到redis-benchmark</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238733.png"></p><h4 id="4-2-关于redis-benchmark-的一些参数"><a href="#4-2-关于redis-benchmark-的一些参数" class="headerlink" title="4.2 关于redis-benchmark 的一些参数"></a>4.2 关于redis-benchmark 的一些参数</h4><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238626.png"></p><blockquote><p>测试：100个并发，十万个请求，单机测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-benchmark -h 127.0.0.1 -p 6379 -c 100 -n 100000</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238323.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; SET &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;                                                     <br>100000 requests completed in 0.94 seconds   表示对十万个请求进行写入测试<br>100 parallel clients 100个并发客户端<br>3 bytes payload每次写入3个字节<br>keep alive: 1只有一台服务器处理请求<br>host configuration “save”: 3600 1 300 100 60 10000RDB持久化方式默认开启的规则<br>host configuration “appendonly”: noAOF持久化方式未开启<br>multi-thread: no多线程未开启</p><p>99.998% &lt;&#x3D; 12.559 milliseconds (cumulative count 99999)<br>99.999% &lt;&#x3D; 12.567 milliseconds (cumulative count 100000)<br>100.000% &lt;&#x3D; 12.567 milliseconds (cumulative count 100000)  请求在多少毫秒处理完成</p><p>throughput summary: 106837.61 requests per second每秒处理请求数</p></blockquote><blockquote><p>另一种写法：</p><p>只测试 set 和 get 命令后退出</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-benchmark -h 127.0.0.1 -p 6379 -t set,get -n 10000 -q</span><br></pre></td></tr></table></figure><h3 id="五、Redis的数据类型【重点】"><a href="#五、Redis的数据类型【重点】" class="headerlink" title="五、Redis的数据类型【重点】"></a>五、Redis的数据类型【重点】</h3><hr><blockquote><p>常用的5种数据结构：</p><ul><li>key-string：一个key对应一个值。</li><li>key-hash：一个key对应一个Map。</li><li>key-list：一个key对应一个列表。</li><li>key-set：一个key对应一个集合。</li><li>key-zset：一个key对应一个有序的集合。</li></ul><p>另外三种数据结构：</p><ul><li>HyperLogLog：计算近似值的。</li><li>GEO：地理位置。</li><li>BIT：一般存储的也是一个字符串，存储的是一个byte[]。</li></ul><p>redis是一种高级的key-value的存储系统，其中的key是字符串类型，尽可能满足如下几点：</p><p>1.key不要太长，最好不要操作1024个字节，这不仅会消耗内存还会降低查找效率</p><p>2.key不要太短，如果太短会降低key的可读性</p><p>3.在项目中，key最好有一个统一的命名规范（根据企业的需求）</p><p>value最常用的五种数据类型：</p><p>1.字符串(String)：最常用的，一般用于存储一个值</p><p>2.列表(List)：使用list结构实现栈和队列结构</p><p>3.集合(Set) ：交集，差集和并集的操作</p><p>4.有序集合(sorted set) ：排行榜，积分存储等操作</p><p>5.哈希(Hash)：存储一个对象数据的</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238255.png"></p><h4 id="5-1-字符串-String"><a href="#5-1-字符串-String" class="headerlink" title="5.1 字符串(String)"></a>5.1 字符串(String)</h4><blockquote><p>set key value：设定key持有指定的字符串value，如果该key存在则进行覆盖操作，总是返回”OK”</p><p>get key：获取key的value。如果与该key关联的value不是String类型，redis将返回错误信息，因为get命令只能用于获取String value，如果该key不存在，返回null</p><p>setex key seconds value：设置key以及对应的value，还可以设置过期时间</p><p>setnx key value：当key不存在时，设置对应的value，当key存在时，不做任何操作</p><p>incr key：将指定的key的value原子性的递增1.如果该key不存在，其初始值为0，在incr之后其值为1。如果value的值不能转成整型，如hello，该操作将执行失败并返回相应的错误信息。</p><p>decr key：将指定的key的value原子性的递减1.如果该key不存在，其初始值为0，在incr之后其值为-1。如果value的值不能转成整型，如hello，该操作将执行失败并返回相应的错误信息。</p><p>incrby key increment：将指定的key的value原子性增加increment，如果该key不存在，器初始值为0，在incrby之后，该值为increment。如果该值不能转成整型，如hello则失败并返回错误信息。</p><p>decrby key decrement：将指定的key的value原子性减少decrement，如果该key不存在，器初始值为0，在decrby之后，该值为decrement。如果该值不能转成整型，如hello则失败并返回错误信息。</p></blockquote><blockquote><p>使用场景如下：</p></blockquote><blockquote><p>1.简单的缓存存储（最常用）</p><p>2.消息的失效性（过期时间的设置）</p><p>3.分布式锁的实现（redisson）</p></blockquote><h4 id="5-2-列表-List"><a href="#5-2-列表-List" class="headerlink" title="5.2 列表(List)"></a>5.2 列表(List)</h4><blockquote><p>lpush key value1 value2…：在指定的key所关联的list的头部插入所有的values，如果该key不存在，该命令在插入的之前创建一个与该key关联的空链表，之后再向该链表的头部插入数据。插入成功，返回元素的个数。</p><p>rpush key value1 value2…：在该list的尾部添加元素。</p><p>lrange key start end：获取链表中从start到end的元素的值，start、end可为负数，若为-1则表示链表尾部的元素，-2则表示倒数第二个，依次类推….</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238502.png"></p><p>lpop key：返回并弹出指定的key关联的链表中的第一个元素，即头部元素。</p><p>rpop key：从尾部弹出元素。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238251.png"></p><p>llen key：返回指定的key关联的链表中的元素的数量。</p></blockquote><blockquote><p>使用场景如下：</p></blockquote><blockquote><p>消息流的场景：</p><p>1.用户的id作为key，发送的消息作为value，例如：朋友圈发布，微博发布，公众号发布…</p></blockquote><h4 id="5-3-集合-Set，不允许出现重复的元素"><a href="#5-3-集合-Set，不允许出现重复的元素" class="headerlink" title="5.3 集合(Set，不允许出现重复的元素)"></a>5.3 集合(Set，不允许出现重复的元素)</h4><blockquote><p>sadd key value1  value2…：向set中添加数据，如果该key的值已有则不会重复添加。</p><p>smembers key：获取set中所有的成员。</p><p>scard key：获取set中成员的数量。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239420.png"></p><p>sismember key member：判断参数中指定的成员是否在该set中，1表示存在，0表示不存在或者该key本身就不存在。</p><p>srem key member1  member2… ：删除set中指定的成员。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239230.png"></p><p>srandmember key：随机返回set中的一个成员。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239870.png"></p><p>spop key：随机返回set中的一个成员并从set中移除。</p><p>sdiff key1 key2：返回key1与key2中相差的成员，而且与key的顺序有关，即返回差集。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239621.png"></p><p>sdiffstore destination key1 key2：将key1、key2相差的成员存储在destination上。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239477.png"></p><p>sinter key[key1,key2…]：返回交集。</p><p>sinterstore destination key1 key2：将返回的交集存储在destination上。</p><p><img src="E:/notes/Day75-Redis/1.%E8%AF%BE%E4%BB%B6/34.redis/01.%E8%AF%BE%E4%BB%B6/Pictures/18.png"></p><p>sunion key1 key2：返回并集。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239623.png"></p><p>sunionstore destination key1 key2：将返回的并集存储在destination上</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239546.png"></p></blockquote><blockquote><p>使用场景如下：</p></blockquote><blockquote><p>公司年会，随机抽奖小程序</p><p>1.把所有用户统一存入set集合中</p><p>2.查看所有抽奖人数</p><p>3.随机抽取指定得奖人数并从set集合中删除</p><p>实现：</p><p>1.sadd  choujiang  userid1,userid2,userid3…</p><p>2.smembers  choujiang</p><p>3.spop  choujiang  [count]</p></blockquote><blockquote><p>微信点赞，微博收藏</p><p>1.点赞，创建集合并加入对应用户</p><p>2.取消点赞，从集合中删除对应用户</p><p>3.检查用户是否点过赞</p><p>4.获取点赞用户列表</p><p>5.获取点赞用户数量</p><p>实现：</p><p>1.sadd  dianzan userid1,userid2,userid3…</p><p>2.srem dianzan userid1</p><p>3.sismember dianzan userid1</p><p>4.smembers dianzan</p><p>5.scard dianzan</p></blockquote><blockquote><p>可能认识的人推荐</p><p>1.两个集合取交集</p><p>实现：</p><p>1.sinter user1list,user2list…</p><p>2.sinterstore list user1list,user2list…</p></blockquote><h4 id="5-4-有序集合-sorted-set"><a href="#5-4-有序集合-sorted-set" class="headerlink" title="5.4 有序集合(sorted set)"></a>5.4 有序集合(sorted set)</h4><blockquote><p>zadd key score member score2 member2 … ：将所有成员以及该成员的分数存放到sorted-set中。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239166.png"></p><p>zcard key：获取集合中的成员数量。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239334.png"></p><p>zcount key min max：获取分数在[min,max]之间的成员。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239837.png"></p><p>zincrby key increment member：设置指定成员的增加的分数。</p><p>zrangebyscore key min max [withscores] [limit offset count]：返回分数在[min,max]的成员并按照分数从低到高排序。[withscores]：显示分数；[limit offset count]：offset，表明从脚标为offset的元素开始并返回count个成员。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239543.png"></p><p>zrevrangebyscore key min max [withscores] [limit offset count]：上面类似（score需从大到小），从高到底排序</p></blockquote><blockquote><p>使用场景如下：</p></blockquote><blockquote><p>排行榜实现</p><p>1.对播放的视频，分数自增1</p><p>2.展示排行榜前十的视频</p><p>实现：</p><p>1.zincrby  videos  1  video1id</p><p>2.zrevrangebyscore videos  100 0  withscores limit 0 10 （zrevrangebyscore从大到小排序）</p></blockquote><h4 id="5-5-哈希-Hash"><a href="#5-5-哈希-Hash" class="headerlink" title="5.5 哈希(Hash)"></a>5.5 哈希(Hash)</h4><blockquote><p>hset key field value：为指定的key设定field&#x2F;value对（键值对）。</p><p>hget key field：返回指定的key中的field的值。</p><p>hgetall key：获取key中的所有filed-vaule。</p><p>hlen key：获取key所包含的field的数量。</p><p>hincrby key field increment：设置key中filed的值增加increment</p><p>hdel key field [field …]：删除key中的属性</p></blockquote><blockquote><p>使用场景如下：</p></blockquote><blockquote><p>购物车场景：</p><p>1.用户的id作为key</p><p>2.商品的id作为field（属性）</p><p>3.商品的数量作为value（属性值）</p><p>购物车操作：</p><p>1.用户添加购物车：hset cart:1001  20001   1    （id为1001的用户添加了一个id为20001的商品，数量为1个）</p><p>2.增加对应商品数量：hincrby cart:1001  20001  1</p><p>3.查询商品总数：hlen cart:1001</p><p>4.删除该用户的某个商品：hdel cart:1001  20001</p><p>5.查询该用户购物车信息：hgetall cart:1001</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071239965.png"></p><h4 id="5-6-通用操作"><a href="#5-6-通用操作" class="headerlink" title="5.6 通用操作"></a>5.6 通用操作</h4><blockquote><p>keys patten：获取所有与patten匹配的key，*表示任意字符，?表示一个字符。</p><p>del key1 key2….：删除指定的key。</p><p>exists key：判断该key是否存在，1表示存在，0表示不存在。</p><p>expire key second：为当前key设置过期时间（单位：秒）。</p><p>ttl key：查看当前key剩余过期时间。</p><p>flushall:   删除所有key（慎用）</p><p>flushdb:  删除所有key（慎用）</p></blockquote><h3 id="六、Jedis的使用【重点】"><a href="#六、Jedis的使用【重点】" class="headerlink" title="六、Jedis的使用【重点】"></a>六、Jedis的使用【重点】</h3><hr><blockquote><p>1.修改&#x2F;usr&#x2F;local&#x2F;redis-5.0.4&#x2F;bin目录下的redis.conf配置文件，然后启动redis服务端</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240709.png"></p><p>修改redis.conf文件中的bind为：0.0.0.0，然后把保护模式关掉</p></blockquote><blockquote><p>如需设置密码，可以使用以下两种方式：</p><p>方式一：通过修改 redis.conf 文件，设置Redis的密码校验</p><p>requirepass 密码</p><p>方式二：在不修改 redis.conf 文件的前提下，在第一次链接Redis时，输入命令：Config set requirepass 密码</p><p>后续连接redis客户端的时候，需要先 AUTH 做一下校验</p><p>127.0.0.1:6379&gt; auth 密码</p></blockquote><blockquote><p>2.创建Maven工程，导入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jedis客户端 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>3.编写实体类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>4.编写测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.qf.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JedisTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取客户端对象</span></span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.126.129&quot;</span>,<span class="number">6379</span>);</span><br><span class="line">        <span class="comment">//如果有密码，必须设置</span></span><br><span class="line">        <span class="comment">//jedis.auth(&quot;root&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//存储String类型数据</span></span><br><span class="line">        jedis.set(<span class="string">&quot;content&quot;</span>,<span class="string">&quot;java2203&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取String值</span></span><br><span class="line">        System.out.println(jedis.get(<span class="string">&quot;content&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//存对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">1</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">userJson</span> <span class="operator">=</span> JSON.toJSONString(user);</span><br><span class="line">        jedis.set(<span class="string">&quot;user&quot;</span>,userJson);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonStringUser</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        System.out.println(jsonStringUser);</span><br><span class="line">        <span class="type">User</span> <span class="variable">db_user</span> <span class="operator">=</span> JSON.parseObject(jsonStringUser, User.class);</span><br><span class="line">        System.out.println(db_user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//通过池拿jedis对象</span></span><br><span class="line">        <span class="comment">//配置一些参数</span></span><br><span class="line">        <span class="type">JedisPoolConfig</span> <span class="variable">jedisPoolConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>();</span><br><span class="line">        <span class="comment">//配置参数</span></span><br><span class="line">        jedisPoolConfig.setMaxTotal(<span class="number">200</span>);<span class="comment">//最大连接数</span></span><br><span class="line">        jedisPoolConfig.setMaxIdle(<span class="number">20</span>);<span class="comment">//最大空闲</span></span><br><span class="line">        jedisPoolConfig.setMinIdle(<span class="number">1</span>);<span class="comment">//最小空闲</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建JedisPool对象</span></span><br><span class="line">        <span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(jedisPoolConfig,<span class="string">&quot;192.168.126.129&quot;</span>,<span class="number">6379</span>);</span><br><span class="line">        <span class="comment">//获取jedis对象</span></span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> jedisPool.getResource();</span><br><span class="line">        <span class="comment">//如果有密码，必须设置</span></span><br><span class="line">        <span class="comment">//jedis.auth(&quot;root&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//操作List集合</span></span><br><span class="line">        jedis.lpush(<span class="string">&quot;sina001&quot;</span>,<span class="string">&quot;今天中午吃什么？&quot;</span>,<span class="string">&quot;今天晚上喝什么&quot;</span>);</span><br><span class="line">        System.out.println(jedis.lrange(<span class="string">&quot;sina001&quot;</span>,<span class="number">0</span>,-<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//操作Set集合</span></span><br><span class="line">        jedis.sadd(<span class="string">&quot;userList&quot;</span>,<span class="string">&quot;jack&quot;</span>,<span class="string">&quot;rose&quot;</span>,<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">        System.out.println(jedis.smembers(<span class="string">&quot;userList&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//有序Set以及Hash</span></span><br><span class="line">        <span class="comment">//....</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、Redis中的事务【了解】"><a href="#七、Redis中的事务【了解】" class="headerlink" title="七、Redis中的事务【了解】"></a>七、Redis中的事务【了解】</h3><hr><blockquote><p>Redis中的事务和MySQL中的事务有本质的区别，Redis中的事务是一个单独的隔离操作，事务中所有的命令都会序列化，按照顺序执行，事务在执行的过程中，不会被其他客户端发来的命令所打断，因为Redis服务端是个单线程的架构，不同的Client虽然看似可以同时保持连接，但发出去的命令是序列化执行的，这在通常的数据库理论下是最高级别的隔离。</p><p>Redis中的事务的作用就是串联多个命令，防止别的命令插队。</p><p>常用命令：multi、exec、discard、watch、unwatch</p><p>当输入multi命令时，之后输入的命令都会被放在队列中，但不会执行，直到输入exec后，Redis会将队列中的命令依次执行，discard用来撤销Exec之前被暂存的命令，并不是回滚。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240256.png"></p></blockquote><blockquote><p>watch&#x2F;unwatch</p><p>在执行multi之前，先执行watch key1 [key2…] ，watch提供的乐观锁功能（初始时一个版本号，exec之后会更新当前版本号），在你exec的那一刻，如果被watch的键发生过改动，则multi到exec之间的指令全部不执行。</p><p>watch表示监控，相当于加锁，但在执行完exec时就会解锁。</p><p>unwatch取消所有锁。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240336.png"></p></blockquote><blockquote><p>Redis中的事务的特性总结</p><p>1.单独的隔离操作</p><p>​事务中的所有命令都会序列化，然后按顺序执行，在执行过程中，不会被其他客户端发送的命令打断。</p><p>2.没有隔离级别的概念</p><p>​队列中的命令没有被提交之前都不会执行。</p><p>3.不能保证原子性</p><p>​Redis同一个事务中如果有一条命令执行失败，其后的命令仍然会被执行，不会回滚</p></blockquote><h3 id="八、Redis消息订阅与发布【了解】"><a href="#八、Redis消息订阅与发布【了解】" class="headerlink" title="八、Redis消息订阅与发布【了解】"></a>八、Redis消息订阅与发布【了解】</h3><hr><blockquote><p>subscribe channel   订阅频道      例如：subscribe cctv5</p><p>publish channel content  在指定频道中发布内容  例如：publish cctv5 basketball</p><p>同时打开两个客户端，一个订阅频道，一个在频道中发布内容，订阅频道的客户端会接收到消息。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240777.png"></p></blockquote><h3 id="九、Redis图形化程序界面【了解】"><a href="#九、Redis图形化程序界面【了解】" class="headerlink" title="九、Redis图形化程序界面【了解】"></a>九、Redis图形化程序界面【了解】</h3><hr><blockquote><p> Redis中默认有16个库，可以在不同的库中存储数据，默认使用0号库存储数据，使用select 0-15可以选择不同的库。</p><p> <img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240008.png"></p></blockquote><blockquote><p>安装之前，需要修改redis.conf文件中的bind为：0.0.0.0（之前已经修改过了）</p></blockquote><blockquote><p>下载地址：<a href="https://github.com/lework/RedisDesktopManager-Windows">https://github.com/lework/RedisDesktopManager-Windows</a></p></blockquote><blockquote><p>安装之后，输入IP地址登录即可看到如下界面：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240715.png"></p></blockquote><h3 id="十、Redis中的持久化【重点】"><a href="#十、Redis中的持久化【重点】" class="headerlink" title="十、Redis中的持久化【重点】"></a>十、Redis中的持久化【重点】</h3><hr><blockquote><p>Redis有两种持久化方式：RDB和AOF。</p></blockquote><h4 id="1-RDB（Redis-DataBase）"><a href="#1-RDB（Redis-DataBase）" class="headerlink" title="1.RDB（Redis DataBase）"></a>1.RDB（Redis DataBase）</h4><blockquote><p>将内存中的数据以快照的方式写入磁盘中，在redis.conf文件中，我们可以找到如下配置：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240254.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240309.png"></p><p>save 900 1</p><p>save 300 10</p><p>save 60 10000</p><p>配置含义：</p><p>900秒内，如果超过1个key被修改，则发起快照保存</p><p>300秒内，如果超过10个key被修改，则发起快照保存</p><p>60秒内，如果1万个key被修改，则发起快照保存</p><p>RDB方式存储的数据会在</p><p>dump.rdb文件中（在哪个目录启动redis服务端，该文件就会在对应目录下生成），该文件不能查看，如需备份，对Redis操作完成之后，只需拷贝该文件即可（Redis服务端启动时会自动加载该文件）</p></blockquote><h4 id="2-AOF（Append-Of-File）"><a href="#2-AOF（Append-Of-File）" class="headerlink" title="2.AOF（Append Of File）"></a>2.AOF（Append Of File）</h4><blockquote><p>AOF默认是不开启的，需要手动开启，同样是在redis.conf文件中开启，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240657.png"></p><p>配置文件中的appendonly修改为yes，开启AOF持久化。开启后，启动redis服务端，发现多了一个appendonly.aof文件。</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240766.png"></p><p>之后任何的操作都会保存在appendonly.aof文件中，可以进行查看，Redis启动时会将appendonly.aof文件中的内容执行一遍。</p><p>如果AOF和RDB同时开启，系统会默认读取AOF的数据。</p></blockquote><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><blockquote><p><strong>RDB优点与缺点</strong></p><p>优点</p><p>如果要进行大规模数据的恢复，RDB方式要比AOF方式恢复速度要快。</p><p>RDB是一个非常紧凑(compact)的文件,它保存了某个时间点的数据集，非常适合用作备份，同时也非常适合用作灾难性恢复，它只有一个文件，内容紧凑，通过备份原文件到本机外的其他主机上，一旦本机发生宕机，就能将备份文件复制到redis安装目录下，通过启用服务就能完成数据的恢复。</p><p>缺点</p><p>RDB这种持久化方式不太适应对数据完整性要求严格的情况，因为，尽管我们可以用过修改快照实现持久化的频率，但是要持久化的数据是一段时间内的整个数据集的状态，如果在还没有触发快照时，本机就宕机了，那么对数据库所做的写操作就随之而消失了并没有持久化本地dump.rdb文件中。</p><p><strong>AOF优点与缺点</strong></p><p>优点</p><p>AOF有着多种持久化策略：</p><p>appendfsync always:每修改同步，每一次发生数据变更都会持久化到磁盘上，性能较差，但数据完整性较好。</p><p>appendfsync everysec: 每秒同步，每秒内记录操作，异步操作，如果一秒内宕机，有数据丢失。</p><p>appendfsync no:不同步。</p><p>AOF文件是一个只进行追加操作的日志文件，对文件写入不需要进行seek，即使在追加的过程中，写入了不完整的命令（例如：磁盘已满），可以使用redis-check-aof工具可以修复这种问题</p><p>Redis可以在AOF文件变得过大时，会自动地在后台对AOF进行重写：重写后的新的AOF文件包含了恢复当前数据集所需的最小命令集合。整个重写操作是绝对安全的，因为Redis在创建AOF文件的过程中，会继续将命令追加到现有的AOF文件中，即使在重写的过程中发生宕机，现有的AOF文件也不会丢失。一旦新AOF文件创建完毕，Redis就会从旧的AOF文件切换到新的AOF文件，并对新的AOF文件进行追加操作。</p><p>缺点</p><p>对于相同的数据集来说，AOF文件要比RDB文件大。</p><p>根据所使用的持久化策略来说，AOF的速度要慢于RDB。一般情况下，每秒同步策略效果较好。不使用同步策略的情况下，AOF与RDB速度一样快。</p></blockquote><h3 id="十一、Redis的主从复制-【重点】"><a href="#十一、Redis的主从复制-【重点】" class="headerlink" title="十一、Redis的主从复制 【重点】"></a>十一、Redis的主从复制 【重点】</h3><hr><blockquote><p>主从复制是指将一台Redis服务器的数据，复制到其它的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。</p><p>默认情况下，每台Redis服务器都是主节点，且一个主节点可以有多个从节点（或没有从节点），但一个从节点只能有一个主节点。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071240740.png"></p><blockquote><p>主从复制的作用：</p><p>1.数据冗余：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式。</p><p>2.故障恢复：当主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复，但实际上是一种服务的冗余.</p><p>3.负载均衡：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务（即写Redis数据时应用连接主节点，读Redis数据时应用连接从节点），分担服务器负载；尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大大提高Redis服务器的并发量。</p><p>4.高可用基石：除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复制是Redis高可用的基础.</p></blockquote><blockquote><p><strong>配置步骤：</strong></p><p>1.查看当前库的信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info replication</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241232.png"></p><p>2.关闭当前运行的redis，打开四个链接，进行测试，拷贝三个redis.conf文件（改成6379，6380，6381）</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241363.png"></p><p>3.分别修改这三个文件信息，需要修改：端口，pid名字，log文件名字，dump.rdb名字</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241463.png"></p><p>port 6379</p><p>pidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pid</p><p>logfile “6379.log”</p><p>dbfilename dump6379.rdb</p><p>port 6380</p><p>pidfile &#x2F;var&#x2F;run&#x2F;redis_63780pid</p><p>logfile “6380.log”</p><p>dbfilename dump6380.rdb</p><p>port 6381</p><p>pidfile &#x2F;var&#x2F;run&#x2F;redis_6381.pid</p><p>logfile “6381.log”</p><p>dbfilename dump6381.rdb</p><p>4.分别在三个链接中启动6379，6380，6381三台redis-server，在第四个链接中查看</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241739.png"></p><p>查看状态</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241022.png"></p><p>5.配置一主二从</p><p>默认情况下，每台Redis都是主节点，我们只需要配置从机即可，我们这里使用6379为主机，6380和6381为从机.</p><p>在对应6380的链接中进行配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-cli -p 6380</span><br><span class="line"></span><br><span class="line">127.0.0.1:6380&gt; slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241702.png"></p><p>6380从机配置成功之后，可以去主机中查看对应信息</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241494.png"></p><p>6381从机配置方式和6380一样，配置成功之后可以再去看一下主机</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241741.png"></p><p>6.由于这里使用的是命令进行配置，所以是暂时的，一般公司配置会在配置文件中进行配置，属于永久性配置，相当于一打开当前服务器，该服务器就是从机，一般主机可以写，从机不能写只能读，主机中的所有信息和数据都会被从机保存！</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241875.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241162.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241729.png"></p><p>即使主机断开链接（127.0.0.1:6379&gt;shutdown），从机仍然可以连接到主机，如果使用的是命令行配置的从机，从机一旦断开链接后，就会变回主机了，如果再次变回从机，仍旧可以获取主机中的值.</p><p>如果主机断开链接，从机可以使用命令：127.0.0.1:6380&gt;slaveof no one 使自己成为主机</p><p>7.主从复制原理</p><p>Slave启动成功连接到master后会发送一个sync同步命令，Master接到命令后，会启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令，在后台进程执行完毕后，master将传送整个数据文件到salve，并完成一次完整的同步.</p><p>全量复制：salve服务在接收到数据库文件数据后，将其存盘并加载到内存中.</p><p>增量复制：master继续将新的所有收集到的修改命令依次传递给salve，完成同步.</p></blockquote><blockquote><p>如果是配置文件配置，可直接在对应的redis.conf文件中添加： slaveof 127.0.0.1 6379 （和命令一样）</p></blockquote><h3 id="十二、Redis的哨兵模式【重点】"><a href="#十二、Redis的哨兵模式【重点】" class="headerlink" title="十二、Redis的哨兵模式【重点】"></a>十二、Redis的哨兵模式【重点】</h3><hr><blockquote><p>当主服务器宕机后，并且我们并没有及时发现，这时候就可能会出现数据丢失或程序无法运行。此时，redis的哨兵模式就派上用场了，可以用它来做redis的高可用.</p><p>每个哨兵都是监控主节点，主节点宕机，哨兵不会宕机！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241034.png"></p><blockquote><p>功能作用：</p><p>1.监控(monitoring)：Sentinel 会不断地检查你的主服务器和从服务器是否运作正常。</p><p>2.提醒(Notifation)：当被监控的某个 Redis 服务器出现问题时， Sentinel 可以通过 API 向管理员或者其他应用程序发送通知。</p><p>3.自动故障转移(Automatic failover)：当一个主服务器不能正常工作时， Sentinel 会开始一次自动故障迁移操作， 它会将失效主服务器的其中一个从服务器升级为新的主服务器， 并让失效主服务器的其他从服务器改为复制新的主服务器； 当客户端试图连接失效的主服务器时， 集群也会向客户端返回新主服务器的地址， 使得集群可以使用新主服务器代替失效服务器。</p></blockquote><blockquote><p><strong>配置步骤：</strong></p><p>1.创建哨兵配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# vim sentinel.conf</span><br></pre></td></tr></table></figure><p>sentinel.conf文件内容如下：（格式：sentinel monitor 被监控名称 host port 1）</p><p>sentinel monitor myredis 127.0.0.1 6379 1</p><p>注意：需要修改redis.conf文件中的bind为：0.0.0.0（之前已经修改过了），如果是三台阿里云服务器，每个服务器都要设置sentinel.conf文件并启动哨兵，127.0.0.1改成主机的IP地址，（从机也是监控主机IP，相当于三台服务器的sentinel.conf的内容都是一样的：sentinel monitor myredis 主机IP地址 6379 1），后面的数字1表示有1个sentinel认为一个master失效时，master就算真正失效，slave会以投票的方式选举成为主机，一般设置的值为从机数量一半以上，比如说：三个从机就设置为：2</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241771.png"></p><p>2.启动哨兵</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./redis-sentinel sentinel.conf</span><br></pre></td></tr></table></figure><p><img src="/Pictures%5C59.png"></p><p>3.如果Master节点断开了（主机宕机了），过一会，会发送哨兵日志，并自动通过算法在其他两个从机中选择一个成为主机.</p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071241535.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242550.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242883.png"></p><p>如果之前的主机6379又重新启动了，过一会，哨兵检测到了之后，会把6379设置为从机！</p><p>哨兵模式的优缺点</p><p>优点</p><p>1.哨兵集群模式是基于主从模式的，所有主从的优点，哨兵模式同样具有。</p><p>2.主从可以切换，故障可以转移，系统可用性更好。</p><p>3.哨兵模式是主从模式的升级，系统更健壮，可用性更高。</p><p>缺点</p><p>1.Redis较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。</p><p>2.实现哨兵模式的配置也不简单，甚至可以说有些繁琐</p></blockquote><h3 id="十三、Redis缓存穿透，击穿，雪崩，倾斜"><a href="#十三、Redis缓存穿透，击穿，雪崩，倾斜" class="headerlink" title="十三、Redis缓存穿透，击穿，雪崩，倾斜"></a>十三、Redis缓存穿透，击穿，雪崩，倾斜</h3><hr><h4 id="1-1-缓存穿透（查不到）"><a href="#1-1-缓存穿透（查不到）" class="headerlink" title="1.1 缓存穿透（查不到）"></a>1.1 缓存穿透（查不到）</h4><blockquote><p>概念：当用户去查询数据的时候，发现redis内存数据库中没有，于是向持久层数据库查询，发现也没有，于是查询失败，当用户过多时，缓存都没有查到，于是都去查持久层数据库，这会给持久层数据库造成很大的压力，此时相当于出现了缓存穿透。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242308.png"></p><blockquote><p> 解决方案：</p><p> 1.布隆过滤器：是一种数据结构，对所有可能查询的参数以hash形式存储，在控制层先进行校验，不符合则丢弃，从而避免了对底层存储系统的压力，但是，布隆过滤器有误差，说myql 有该id ，不一定有，说myql 没有该id，一定没有 ！</p><p> <img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242234.png"></p><p> 2.缓存空对象：当存储层查不到时，即使返回的空对象也将其缓存起来，同时设置一个过期时间，之后再访问这个数据将会从缓存中获取，保护后端数据.</p><p> <img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242723.png"></p><p> 但会有两个问题：</p><p> 1.如果空值被缓存起来，就意味着需要更多的空间存储更多的键，会有很多空值的键.</p><p> 2.即使对空值设置了过期时间，还是会存在 缓存层和存储层会有一段时间窗口不一致，这对于需要保持一致性的业务会有影响.</p></blockquote><h4 id="1-2-缓存击穿（访问量大，缓存过期）"><a href="#1-2-缓存击穿（访问量大，缓存过期）" class="headerlink" title="1.2 缓存击穿（访问量大，缓存过期）"></a>1.2 缓存击穿（访问量大，缓存过期）</h4><blockquote><p>指对某一个key的频繁访问，在不停的扛着大并发，大并发集中对这一个点进行访问，当这个key在失效的瞬间，持续的大并发就会直接请求数据库，就像在一个屏障上凿开了一个洞，例如微博由于某个热搜导致宕机.</p><p>​</p><p>其实就是：当某个key在过期的瞬间，有大量的请求并发访问，这类数据一段是热点数据，由于缓存过期，会同时访问数据库来查询最新数据，并回写缓存，导致数据库瞬间压力过大。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242941.png"></p><blockquote><p>解决方案：</p><p>1.设置热点数据永不过期：从缓存层面上来说，不设置过期时间，就不会出现热点key过期后产生的问题.</p><p>2.添加互斥锁：使用分布式锁，保证对每个key同时只有一个线程去查询后端服务，其他线程没有获得分布式锁的权限，因此只需要等待即可，这种方式将高并发的压力转移到了分布式锁上，对分布式锁也是一种极大的考验.</p></blockquote><h4 id="1-3-缓存雪崩"><a href="#1-3-缓存雪崩" class="headerlink" title="1.3 缓存雪崩"></a>1.3 缓存雪崩</h4><blockquote><p>指在某一个时间段，缓存集中过期失效或Redis宕机导致的，例如双十一抢购热门商品，这些商品都会放在缓存中，假设缓存时间为一个小时，一个小时之后，这些商品的缓存都过期了，访问压力瞬间都来到了数据库上，此时数据库会产生周期性的压力波峰，所有的请求都会到达存储层，存储层的调用量暴增，造成存储层挂掉的情况.</p></blockquote><p><img src="/Pictures%5C67.png"></p><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242355.png"></p><blockquote><p>其实比较致命的缓存雪崩，是缓存服务器某个节点宕机或断网，因为自然形成的缓存雪崩，一定是在某个时间段集中创建缓存，此时的数据库还是可以顶住压力的，而缓存服务节点的宕机，对数据库服务器造成的压力是不可预知的，有可能瞬间就把服务器压垮.</p><p>解决方案：</p><p>1.配置Redis的高可用：其实就是搭建集群环境，有更多的备用机.</p><p>2.限流降级：在缓存失效后，通过加锁或者队列来控制读服务器以及写缓存的线程数量，比如对某个key只允许一个线程查询数据和写缓存，其他线程等待.</p><p>3.数据预热：在项目正式部署之前，把可能用的数据预先访问一边，这样可以把一些数据加载到缓存中，在即将发生大并发访问之前手动触发加载缓存中不同的key，设置不同的过期时间，让缓存失效的时间尽量均衡.</p></blockquote><h4 id="1-4-缓存倾斜"><a href="#1-4-缓存倾斜" class="headerlink" title="1.4 缓存倾斜"></a>1.4 缓存倾斜</h4><blockquote><p>指某一台redis服务器压力过大而导致该服务器宕机.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242384.png"></p><h3 id="十四、Redis集群搭建"><a href="#十四、Redis集群搭建" class="headerlink" title="十四、Redis集群搭建"></a>十四、Redis集群搭建</h3><hr><p><img src="https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071242006.png"></p><h3 id="十五、Redis其他常见问题"><a href="#十五、Redis其他常见问题" class="headerlink" title="十五、Redis其他常见问题"></a>十五、Redis其他常见问题</h3><hr><h4 id="1-key的生存时间到了，Redis会立即删除吗？"><a href="#1-key的生存时间到了，Redis会立即删除吗？" class="headerlink" title="1.key的生存时间到了，Redis会立即删除吗？"></a>1.key的生存时间到了，Redis会立即删除吗？</h4><blockquote><p><strong>不会立即删除</strong></p><p>1.1定期删除：Redis每隔一段时间就去会去查看Redis设置了过期时间的key，会再100ms的间隔中默认查看3个key。</p><p>1.2惰性删除：如果当你去查询一个已经过了生存时间的key时，Redis会先查看当前key的生存时间，是否已经到了，直接删除当前key，并且给用户返回一个空值。</p></blockquote><h4 id="2-Redis的淘汰机制"><a href="#2-Redis的淘汰机制" class="headerlink" title="2.Redis的淘汰机制"></a>2.Redis的淘汰机制</h4><blockquote><p>在Redis内存已经满的时候，添加了一个新的数据，执行淘汰机制。(redis.conf中配置)</p><p>2.1  volatile-lru：在内存不足时，Redis会在设置过了生存时间的key中干掉一个最近最少使用的key。</p><p>2.2  allkeys-lru：在内存不足时，Redis会在全部的key中干掉一个最近最少使用的key。</p><p>2.3  volatile-lfu：在内存不足时，Redis会在设置过了生存时间的key中干掉一个最近最少频次使用的key。</p><p>2.4  allkeys-lfu：在内存不足时，Redis会在全部的key中干掉一个最近最少频次使用的key。</p><p>2.5  volatile-random：在内存不足时，Redis会在设置过了生存时间的key中随机干掉一个。</p><p>2.6  allkeys-random：在内存不足时，Redis会在全部的key中随机干掉一个。</p><p>2.7  volatile-ttl：在内存不足时，Redis会在设置过了生存时间的key中干掉一个剩余生存时间最少的key。</p><p>2.8  noeviction：（默认）在内存不足时，直接报错。</p><p>方案：指定淘汰机制的方式：maxmemory-policy具体策略，设置Redis的最大内存：maxmemory 字节大小</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/CoutureOne/blogimg@main/img/202211071238373.jfif&quot; alt=&quot;1586740065742&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="后端学习" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="redis" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/redis/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
